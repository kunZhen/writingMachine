Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement SEMI
Rule 2     program -> statement
Rule 3     program -> program statement SEMI
Rule 4     program -> program statement
Rule 5     statement -> expression
Rule 6     statement -> procedure_statement
Rule 7     statement -> call_statement
Rule 8     statement -> def_statement
Rule 9     statement -> put_statement
Rule 10    statement -> add_statement
Rule 11    statement -> continueup_statement
Rule 12    statement -> continuedown_statement
Rule 13    statement -> continueright_statement
Rule 14    statement -> continueleft_statement
Rule 15    statement -> turnright_statement
Rule 16    statement -> turnleft_statement
Rule 17    statement -> pos_statement
Rule 18    statement -> posx_statement
Rule 19    statement -> posy_statement
Rule 20    statement -> usecolor_statement
Rule 21    statement -> down_statement
Rule 22    statement -> up_statement
Rule 23    statement -> beginning_statement
Rule 24    statement -> for_statement
Rule 25    statement -> case_statement
Rule 26    statement -> repeat_statement
Rule 27    statement -> while_statement
Rule 28    expression -> expression PLUS expression
Rule 29    expression -> expression MINUS expression
Rule 30    expression -> expression MULT_OP expression
Rule 31    expression -> expression DIV_OP expression
Rule 32    expression -> expression LT expression
Rule 33    expression -> expression GT expression
Rule 34    expression -> expression EQUALS expression
Rule 35    def_statement -> DEF LPAREN ID COMMA statement RPAREN
Rule 36    put_statement -> PUT LPAREN ID COMMA statement RPAREN
Rule 37    add_statement -> ADD LPAREN ID RPAREN
Rule 38    add_statement -> ADD LPAREN ID COMMA statement RPAREN
Rule 39    continueup_statement -> CONTINUEUP statement
Rule 40    continuedown_statement -> CONTINUEDOWN statement
Rule 41    continueright_statement -> CONTINUERIGHT statement
Rule 42    continueleft_statement -> CONTINUELEFT statement
Rule 43    turnright_statement -> TURNRIGHT statement
Rule 44    turnleft_statement -> TURNLEFT statement
Rule 45    pos_statement -> POS LPAREN statement COMMA statement RPAREN
Rule 46    posx_statement -> POSX statement
Rule 47    posy_statement -> POSY statement
Rule 48    usecolor_statement -> USECOLOR statement
Rule 49    down_statement -> DOWN
Rule 50    up_statement -> UP
Rule 51    beginning_statement -> BEGINNING
Rule 52    expression -> EQUAL LPAREN statement COMMA statement RPAREN
Rule 53    expression -> AND LPAREN statement COMMA statement RPAREN
Rule 54    expression -> OR LPAREN statement COMMA statement RPAREN
Rule 55    expression -> GREATER LPAREN statement COMMA statement RPAREN
Rule 56    expression -> SMALLER LPAREN statement COMMA statement RPAREN
Rule 57    expression -> SUBSTR LPAREN statement COMMA statement RPAREN
Rule 58    expression -> RANDOM LPAREN statement RPAREN
Rule 59    expression -> MULT LPAREN statement COMMA statement RPAREN
Rule 60    expression -> DIV LPAREN statement COMMA statement RPAREN
Rule 61    expression -> SUM LPAREN statement COMMA statement RPAREN
Rule 62    expression -> LPAREN expression_list RPAREN
Rule 63    expression_bracket -> LBRACKET expression_list RBRACKET
Rule 64    expression_bracket -> LBRACKET expression_list SEMI RBRACKET
Rule 65    expression -> BOOLEAN
Rule 66    expression_list -> statement
Rule 67    expression_list -> expression_list statement
Rule 68    expression -> NUMBER
Rule 69    expression -> ID
Rule 70    for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
Rule 71    execute_statement -> statement
Rule 72    case_statement -> CASE ID when_clauses END CASE
Rule 73    case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
Rule 74    when_clauses -> when_clause
Rule 75    when_clauses -> when_clauses when_clause
Rule 76    when_clause -> WHEN expression THEN LBRACKET program RBRACKET
Rule 77    repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
Rule 78    while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND
Rule 79    procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
Rule 80    call_statement -> CALL ID LPAREN parameter_list RPAREN
Rule 81    parameter_list -> expression
Rule 82    parameter_list -> parameter_list COMMA expression
Rule 83    parameter_list -> <empty>

Terminals, with rules where they appear

ADD                  : 37 38
AND                  : 53
BEGINNING            : 51
BOOLEAN              : 65
CALL                 : 80
CASE                 : 72 72 73 73
COMMA                : 35 36 38 45 52 53 54 55 56 57 59 60 61 82
COMMENT              : 
CONTINUEDOWN         : 40
CONTINUELEFT         : 42
CONTINUERIGHT        : 41
CONTINUEUP           : 39
DEF                  : 35
DIV                  : 60
DIV_OP               : 31
DOWN                 : 49
ELSE                 : 73
END                  : 70 72 73 79
EQUAL                : 52
EQUALS               : 34
FOR                  : 70
GREATER              : 55
GT                   : 33
ID                   : 35 36 37 38 69 70 72 73 79 80
LBRACKET             : 63 64 70 73 76 77 77 78 78 79
LOOP                 : 70 70
LPAREN               : 35 36 37 38 45 52 53 54 55 56 57 58 59 60 61 62 70 79 80
LT                   : 32
MINUS                : 29
MULT                 : 59
MULT_OP              : 30
NUMBER               : 68
OR                   : 54
PLUS                 : 28
POS                  : 45
POSX                 : 46
POSY                 : 47
PROC                 : 79
PUT                  : 36
RANDOM               : 58
RBRACKET             : 63 64 70 73 76 77 77 78 78 79
REPEAT               : 77
RPAREN               : 35 36 37 38 45 52 53 54 55 56 57 58 59 60 61 62 70 79 80
SEMI                 : 1 3 64 79
SMALLER              : 56
SUBSTR               : 57
SUM                  : 61
THEN                 : 76
TO                   : 70
TURNLEFT             : 44
TURNRIGHT            : 43
UNTIL                : 77
UP                   : 50
USECOLOR             : 48
WHEN                 : 76
WHEND                : 78
WHILE                : 78
error                : 

Nonterminals, with rules where they appear

add_statement        : 10
beginning_statement  : 23
call_statement       : 7
case_statement       : 25
continuedown_statement : 12
continueleft_statement : 14
continueright_statement : 13
continueup_statement : 11
def_statement        : 8
down_statement       : 21
execute_statement    : 
expression           : 5 28 28 29 29 30 30 31 31 32 32 33 33 34 34 70 70 76 81 82
expression_bracket   : 
expression_list      : 62 63 64 67
for_statement        : 24
parameter_list       : 79 80 82
pos_statement        : 17
posx_statement       : 18
posy_statement       : 19
procedure_statement  : 6
program              : 3 4 70 73 76 77 78 79 0
put_statement        : 9
repeat_statement     : 26
statement            : 1 2 3 4 35 36 38 39 40 41 42 43 44 45 45 46 47 48 52 52 53 53 54 54 55 55 56 56 57 57 58 59 59 60 60 61 61 66 67 71 77 78
turnleft_statement   : 16
turnright_statement  : 15
up_statement         : 22
usecolor_statement   : 20
when_clause          : 74 75
when_clauses         : 72 73 75
while_statement      : 27

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement SEMI
    (2) program -> . statement
    (3) program -> . program statement SEMI
    (4) program -> . program statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    program                        shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 1

    (0) S' -> program .
    (3) program -> program . statement SEMI
    (4) program -> program . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 62
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 2

    (1) program -> statement . SEMI
    (2) program -> statement .

    SEMI            shift and go to state 63
    EQUAL           reduce using rule 2 (program -> statement .)
    AND             reduce using rule 2 (program -> statement .)
    OR              reduce using rule 2 (program -> statement .)
    GREATER         reduce using rule 2 (program -> statement .)
    SMALLER         reduce using rule 2 (program -> statement .)
    SUBSTR          reduce using rule 2 (program -> statement .)
    RANDOM          reduce using rule 2 (program -> statement .)
    MULT            reduce using rule 2 (program -> statement .)
    DIV             reduce using rule 2 (program -> statement .)
    SUM             reduce using rule 2 (program -> statement .)
    LPAREN          reduce using rule 2 (program -> statement .)
    BOOLEAN         reduce using rule 2 (program -> statement .)
    NUMBER          reduce using rule 2 (program -> statement .)
    ID              reduce using rule 2 (program -> statement .)
    PROC            reduce using rule 2 (program -> statement .)
    CALL            reduce using rule 2 (program -> statement .)
    DEF             reduce using rule 2 (program -> statement .)
    PUT             reduce using rule 2 (program -> statement .)
    ADD             reduce using rule 2 (program -> statement .)
    CONTINUEUP      reduce using rule 2 (program -> statement .)
    CONTINUEDOWN    reduce using rule 2 (program -> statement .)
    CONTINUERIGHT   reduce using rule 2 (program -> statement .)
    CONTINUELEFT    reduce using rule 2 (program -> statement .)
    TURNRIGHT       reduce using rule 2 (program -> statement .)
    TURNLEFT        reduce using rule 2 (program -> statement .)
    POS             reduce using rule 2 (program -> statement .)
    POSX            reduce using rule 2 (program -> statement .)
    POSY            reduce using rule 2 (program -> statement .)
    USECOLOR        reduce using rule 2 (program -> statement .)
    DOWN            reduce using rule 2 (program -> statement .)
    UP              reduce using rule 2 (program -> statement .)
    BEGINNING       reduce using rule 2 (program -> statement .)
    FOR             reduce using rule 2 (program -> statement .)
    CASE            reduce using rule 2 (program -> statement .)
    REPEAT          reduce using rule 2 (program -> statement .)
    WHILE           reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)
    RBRACKET        reduce using rule 2 (program -> statement .)


state 3

    (5) statement -> expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    SEMI            reduce using rule 5 (statement -> expression .)
    EQUAL           reduce using rule 5 (statement -> expression .)
    AND             reduce using rule 5 (statement -> expression .)
    OR              reduce using rule 5 (statement -> expression .)
    GREATER         reduce using rule 5 (statement -> expression .)
    SMALLER         reduce using rule 5 (statement -> expression .)
    SUBSTR          reduce using rule 5 (statement -> expression .)
    RANDOM          reduce using rule 5 (statement -> expression .)
    MULT            reduce using rule 5 (statement -> expression .)
    DIV             reduce using rule 5 (statement -> expression .)
    SUM             reduce using rule 5 (statement -> expression .)
    LPAREN          reduce using rule 5 (statement -> expression .)
    BOOLEAN         reduce using rule 5 (statement -> expression .)
    NUMBER          reduce using rule 5 (statement -> expression .)
    ID              reduce using rule 5 (statement -> expression .)
    PROC            reduce using rule 5 (statement -> expression .)
    CALL            reduce using rule 5 (statement -> expression .)
    DEF             reduce using rule 5 (statement -> expression .)
    PUT             reduce using rule 5 (statement -> expression .)
    ADD             reduce using rule 5 (statement -> expression .)
    CONTINUEUP      reduce using rule 5 (statement -> expression .)
    CONTINUEDOWN    reduce using rule 5 (statement -> expression .)
    CONTINUERIGHT   reduce using rule 5 (statement -> expression .)
    CONTINUELEFT    reduce using rule 5 (statement -> expression .)
    TURNRIGHT       reduce using rule 5 (statement -> expression .)
    TURNLEFT        reduce using rule 5 (statement -> expression .)
    POS             reduce using rule 5 (statement -> expression .)
    POSX            reduce using rule 5 (statement -> expression .)
    POSY            reduce using rule 5 (statement -> expression .)
    USECOLOR        reduce using rule 5 (statement -> expression .)
    DOWN            reduce using rule 5 (statement -> expression .)
    UP              reduce using rule 5 (statement -> expression .)
    BEGINNING       reduce using rule 5 (statement -> expression .)
    FOR             reduce using rule 5 (statement -> expression .)
    CASE            reduce using rule 5 (statement -> expression .)
    REPEAT          reduce using rule 5 (statement -> expression .)
    WHILE           reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    RPAREN          reduce using rule 5 (statement -> expression .)
    COMMA           reduce using rule 5 (statement -> expression .)
    RBRACKET        reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    MULT_OP         shift and go to state 66
    DIV_OP          shift and go to state 67
    LT              shift and go to state 68
    GT              shift and go to state 69
    EQUALS          shift and go to state 70


state 4

    (6) statement -> procedure_statement .

    SEMI            reduce using rule 6 (statement -> procedure_statement .)
    EQUAL           reduce using rule 6 (statement -> procedure_statement .)
    AND             reduce using rule 6 (statement -> procedure_statement .)
    OR              reduce using rule 6 (statement -> procedure_statement .)
    GREATER         reduce using rule 6 (statement -> procedure_statement .)
    SMALLER         reduce using rule 6 (statement -> procedure_statement .)
    SUBSTR          reduce using rule 6 (statement -> procedure_statement .)
    RANDOM          reduce using rule 6 (statement -> procedure_statement .)
    MULT            reduce using rule 6 (statement -> procedure_statement .)
    DIV             reduce using rule 6 (statement -> procedure_statement .)
    SUM             reduce using rule 6 (statement -> procedure_statement .)
    LPAREN          reduce using rule 6 (statement -> procedure_statement .)
    BOOLEAN         reduce using rule 6 (statement -> procedure_statement .)
    NUMBER          reduce using rule 6 (statement -> procedure_statement .)
    ID              reduce using rule 6 (statement -> procedure_statement .)
    PROC            reduce using rule 6 (statement -> procedure_statement .)
    CALL            reduce using rule 6 (statement -> procedure_statement .)
    DEF             reduce using rule 6 (statement -> procedure_statement .)
    PUT             reduce using rule 6 (statement -> procedure_statement .)
    ADD             reduce using rule 6 (statement -> procedure_statement .)
    CONTINUEUP      reduce using rule 6 (statement -> procedure_statement .)
    CONTINUEDOWN    reduce using rule 6 (statement -> procedure_statement .)
    CONTINUERIGHT   reduce using rule 6 (statement -> procedure_statement .)
    CONTINUELEFT    reduce using rule 6 (statement -> procedure_statement .)
    TURNRIGHT       reduce using rule 6 (statement -> procedure_statement .)
    TURNLEFT        reduce using rule 6 (statement -> procedure_statement .)
    POS             reduce using rule 6 (statement -> procedure_statement .)
    POSX            reduce using rule 6 (statement -> procedure_statement .)
    POSY            reduce using rule 6 (statement -> procedure_statement .)
    USECOLOR        reduce using rule 6 (statement -> procedure_statement .)
    DOWN            reduce using rule 6 (statement -> procedure_statement .)
    UP              reduce using rule 6 (statement -> procedure_statement .)
    BEGINNING       reduce using rule 6 (statement -> procedure_statement .)
    FOR             reduce using rule 6 (statement -> procedure_statement .)
    CASE            reduce using rule 6 (statement -> procedure_statement .)
    REPEAT          reduce using rule 6 (statement -> procedure_statement .)
    WHILE           reduce using rule 6 (statement -> procedure_statement .)
    $end            reduce using rule 6 (statement -> procedure_statement .)
    RPAREN          reduce using rule 6 (statement -> procedure_statement .)
    COMMA           reduce using rule 6 (statement -> procedure_statement .)
    RBRACKET        reduce using rule 6 (statement -> procedure_statement .)


state 5

    (7) statement -> call_statement .

    SEMI            reduce using rule 7 (statement -> call_statement .)
    EQUAL           reduce using rule 7 (statement -> call_statement .)
    AND             reduce using rule 7 (statement -> call_statement .)
    OR              reduce using rule 7 (statement -> call_statement .)
    GREATER         reduce using rule 7 (statement -> call_statement .)
    SMALLER         reduce using rule 7 (statement -> call_statement .)
    SUBSTR          reduce using rule 7 (statement -> call_statement .)
    RANDOM          reduce using rule 7 (statement -> call_statement .)
    MULT            reduce using rule 7 (statement -> call_statement .)
    DIV             reduce using rule 7 (statement -> call_statement .)
    SUM             reduce using rule 7 (statement -> call_statement .)
    LPAREN          reduce using rule 7 (statement -> call_statement .)
    BOOLEAN         reduce using rule 7 (statement -> call_statement .)
    NUMBER          reduce using rule 7 (statement -> call_statement .)
    ID              reduce using rule 7 (statement -> call_statement .)
    PROC            reduce using rule 7 (statement -> call_statement .)
    CALL            reduce using rule 7 (statement -> call_statement .)
    DEF             reduce using rule 7 (statement -> call_statement .)
    PUT             reduce using rule 7 (statement -> call_statement .)
    ADD             reduce using rule 7 (statement -> call_statement .)
    CONTINUEUP      reduce using rule 7 (statement -> call_statement .)
    CONTINUEDOWN    reduce using rule 7 (statement -> call_statement .)
    CONTINUERIGHT   reduce using rule 7 (statement -> call_statement .)
    CONTINUELEFT    reduce using rule 7 (statement -> call_statement .)
    TURNRIGHT       reduce using rule 7 (statement -> call_statement .)
    TURNLEFT        reduce using rule 7 (statement -> call_statement .)
    POS             reduce using rule 7 (statement -> call_statement .)
    POSX            reduce using rule 7 (statement -> call_statement .)
    POSY            reduce using rule 7 (statement -> call_statement .)
    USECOLOR        reduce using rule 7 (statement -> call_statement .)
    DOWN            reduce using rule 7 (statement -> call_statement .)
    UP              reduce using rule 7 (statement -> call_statement .)
    BEGINNING       reduce using rule 7 (statement -> call_statement .)
    FOR             reduce using rule 7 (statement -> call_statement .)
    CASE            reduce using rule 7 (statement -> call_statement .)
    REPEAT          reduce using rule 7 (statement -> call_statement .)
    WHILE           reduce using rule 7 (statement -> call_statement .)
    $end            reduce using rule 7 (statement -> call_statement .)
    RPAREN          reduce using rule 7 (statement -> call_statement .)
    COMMA           reduce using rule 7 (statement -> call_statement .)
    RBRACKET        reduce using rule 7 (statement -> call_statement .)


state 6

    (8) statement -> def_statement .

    SEMI            reduce using rule 8 (statement -> def_statement .)
    EQUAL           reduce using rule 8 (statement -> def_statement .)
    AND             reduce using rule 8 (statement -> def_statement .)
    OR              reduce using rule 8 (statement -> def_statement .)
    GREATER         reduce using rule 8 (statement -> def_statement .)
    SMALLER         reduce using rule 8 (statement -> def_statement .)
    SUBSTR          reduce using rule 8 (statement -> def_statement .)
    RANDOM          reduce using rule 8 (statement -> def_statement .)
    MULT            reduce using rule 8 (statement -> def_statement .)
    DIV             reduce using rule 8 (statement -> def_statement .)
    SUM             reduce using rule 8 (statement -> def_statement .)
    LPAREN          reduce using rule 8 (statement -> def_statement .)
    BOOLEAN         reduce using rule 8 (statement -> def_statement .)
    NUMBER          reduce using rule 8 (statement -> def_statement .)
    ID              reduce using rule 8 (statement -> def_statement .)
    PROC            reduce using rule 8 (statement -> def_statement .)
    CALL            reduce using rule 8 (statement -> def_statement .)
    DEF             reduce using rule 8 (statement -> def_statement .)
    PUT             reduce using rule 8 (statement -> def_statement .)
    ADD             reduce using rule 8 (statement -> def_statement .)
    CONTINUEUP      reduce using rule 8 (statement -> def_statement .)
    CONTINUEDOWN    reduce using rule 8 (statement -> def_statement .)
    CONTINUERIGHT   reduce using rule 8 (statement -> def_statement .)
    CONTINUELEFT    reduce using rule 8 (statement -> def_statement .)
    TURNRIGHT       reduce using rule 8 (statement -> def_statement .)
    TURNLEFT        reduce using rule 8 (statement -> def_statement .)
    POS             reduce using rule 8 (statement -> def_statement .)
    POSX            reduce using rule 8 (statement -> def_statement .)
    POSY            reduce using rule 8 (statement -> def_statement .)
    USECOLOR        reduce using rule 8 (statement -> def_statement .)
    DOWN            reduce using rule 8 (statement -> def_statement .)
    UP              reduce using rule 8 (statement -> def_statement .)
    BEGINNING       reduce using rule 8 (statement -> def_statement .)
    FOR             reduce using rule 8 (statement -> def_statement .)
    CASE            reduce using rule 8 (statement -> def_statement .)
    REPEAT          reduce using rule 8 (statement -> def_statement .)
    WHILE           reduce using rule 8 (statement -> def_statement .)
    $end            reduce using rule 8 (statement -> def_statement .)
    RPAREN          reduce using rule 8 (statement -> def_statement .)
    COMMA           reduce using rule 8 (statement -> def_statement .)
    RBRACKET        reduce using rule 8 (statement -> def_statement .)


state 7

    (9) statement -> put_statement .

    SEMI            reduce using rule 9 (statement -> put_statement .)
    EQUAL           reduce using rule 9 (statement -> put_statement .)
    AND             reduce using rule 9 (statement -> put_statement .)
    OR              reduce using rule 9 (statement -> put_statement .)
    GREATER         reduce using rule 9 (statement -> put_statement .)
    SMALLER         reduce using rule 9 (statement -> put_statement .)
    SUBSTR          reduce using rule 9 (statement -> put_statement .)
    RANDOM          reduce using rule 9 (statement -> put_statement .)
    MULT            reduce using rule 9 (statement -> put_statement .)
    DIV             reduce using rule 9 (statement -> put_statement .)
    SUM             reduce using rule 9 (statement -> put_statement .)
    LPAREN          reduce using rule 9 (statement -> put_statement .)
    BOOLEAN         reduce using rule 9 (statement -> put_statement .)
    NUMBER          reduce using rule 9 (statement -> put_statement .)
    ID              reduce using rule 9 (statement -> put_statement .)
    PROC            reduce using rule 9 (statement -> put_statement .)
    CALL            reduce using rule 9 (statement -> put_statement .)
    DEF             reduce using rule 9 (statement -> put_statement .)
    PUT             reduce using rule 9 (statement -> put_statement .)
    ADD             reduce using rule 9 (statement -> put_statement .)
    CONTINUEUP      reduce using rule 9 (statement -> put_statement .)
    CONTINUEDOWN    reduce using rule 9 (statement -> put_statement .)
    CONTINUERIGHT   reduce using rule 9 (statement -> put_statement .)
    CONTINUELEFT    reduce using rule 9 (statement -> put_statement .)
    TURNRIGHT       reduce using rule 9 (statement -> put_statement .)
    TURNLEFT        reduce using rule 9 (statement -> put_statement .)
    POS             reduce using rule 9 (statement -> put_statement .)
    POSX            reduce using rule 9 (statement -> put_statement .)
    POSY            reduce using rule 9 (statement -> put_statement .)
    USECOLOR        reduce using rule 9 (statement -> put_statement .)
    DOWN            reduce using rule 9 (statement -> put_statement .)
    UP              reduce using rule 9 (statement -> put_statement .)
    BEGINNING       reduce using rule 9 (statement -> put_statement .)
    FOR             reduce using rule 9 (statement -> put_statement .)
    CASE            reduce using rule 9 (statement -> put_statement .)
    REPEAT          reduce using rule 9 (statement -> put_statement .)
    WHILE           reduce using rule 9 (statement -> put_statement .)
    $end            reduce using rule 9 (statement -> put_statement .)
    RPAREN          reduce using rule 9 (statement -> put_statement .)
    COMMA           reduce using rule 9 (statement -> put_statement .)
    RBRACKET        reduce using rule 9 (statement -> put_statement .)


state 8

    (10) statement -> add_statement .

    SEMI            reduce using rule 10 (statement -> add_statement .)
    EQUAL           reduce using rule 10 (statement -> add_statement .)
    AND             reduce using rule 10 (statement -> add_statement .)
    OR              reduce using rule 10 (statement -> add_statement .)
    GREATER         reduce using rule 10 (statement -> add_statement .)
    SMALLER         reduce using rule 10 (statement -> add_statement .)
    SUBSTR          reduce using rule 10 (statement -> add_statement .)
    RANDOM          reduce using rule 10 (statement -> add_statement .)
    MULT            reduce using rule 10 (statement -> add_statement .)
    DIV             reduce using rule 10 (statement -> add_statement .)
    SUM             reduce using rule 10 (statement -> add_statement .)
    LPAREN          reduce using rule 10 (statement -> add_statement .)
    BOOLEAN         reduce using rule 10 (statement -> add_statement .)
    NUMBER          reduce using rule 10 (statement -> add_statement .)
    ID              reduce using rule 10 (statement -> add_statement .)
    PROC            reduce using rule 10 (statement -> add_statement .)
    CALL            reduce using rule 10 (statement -> add_statement .)
    DEF             reduce using rule 10 (statement -> add_statement .)
    PUT             reduce using rule 10 (statement -> add_statement .)
    ADD             reduce using rule 10 (statement -> add_statement .)
    CONTINUEUP      reduce using rule 10 (statement -> add_statement .)
    CONTINUEDOWN    reduce using rule 10 (statement -> add_statement .)
    CONTINUERIGHT   reduce using rule 10 (statement -> add_statement .)
    CONTINUELEFT    reduce using rule 10 (statement -> add_statement .)
    TURNRIGHT       reduce using rule 10 (statement -> add_statement .)
    TURNLEFT        reduce using rule 10 (statement -> add_statement .)
    POS             reduce using rule 10 (statement -> add_statement .)
    POSX            reduce using rule 10 (statement -> add_statement .)
    POSY            reduce using rule 10 (statement -> add_statement .)
    USECOLOR        reduce using rule 10 (statement -> add_statement .)
    DOWN            reduce using rule 10 (statement -> add_statement .)
    UP              reduce using rule 10 (statement -> add_statement .)
    BEGINNING       reduce using rule 10 (statement -> add_statement .)
    FOR             reduce using rule 10 (statement -> add_statement .)
    CASE            reduce using rule 10 (statement -> add_statement .)
    REPEAT          reduce using rule 10 (statement -> add_statement .)
    WHILE           reduce using rule 10 (statement -> add_statement .)
    $end            reduce using rule 10 (statement -> add_statement .)
    RPAREN          reduce using rule 10 (statement -> add_statement .)
    COMMA           reduce using rule 10 (statement -> add_statement .)
    RBRACKET        reduce using rule 10 (statement -> add_statement .)


state 9

    (11) statement -> continueup_statement .

    SEMI            reduce using rule 11 (statement -> continueup_statement .)
    EQUAL           reduce using rule 11 (statement -> continueup_statement .)
    AND             reduce using rule 11 (statement -> continueup_statement .)
    OR              reduce using rule 11 (statement -> continueup_statement .)
    GREATER         reduce using rule 11 (statement -> continueup_statement .)
    SMALLER         reduce using rule 11 (statement -> continueup_statement .)
    SUBSTR          reduce using rule 11 (statement -> continueup_statement .)
    RANDOM          reduce using rule 11 (statement -> continueup_statement .)
    MULT            reduce using rule 11 (statement -> continueup_statement .)
    DIV             reduce using rule 11 (statement -> continueup_statement .)
    SUM             reduce using rule 11 (statement -> continueup_statement .)
    LPAREN          reduce using rule 11 (statement -> continueup_statement .)
    BOOLEAN         reduce using rule 11 (statement -> continueup_statement .)
    NUMBER          reduce using rule 11 (statement -> continueup_statement .)
    ID              reduce using rule 11 (statement -> continueup_statement .)
    PROC            reduce using rule 11 (statement -> continueup_statement .)
    CALL            reduce using rule 11 (statement -> continueup_statement .)
    DEF             reduce using rule 11 (statement -> continueup_statement .)
    PUT             reduce using rule 11 (statement -> continueup_statement .)
    ADD             reduce using rule 11 (statement -> continueup_statement .)
    CONTINUEUP      reduce using rule 11 (statement -> continueup_statement .)
    CONTINUEDOWN    reduce using rule 11 (statement -> continueup_statement .)
    CONTINUERIGHT   reduce using rule 11 (statement -> continueup_statement .)
    CONTINUELEFT    reduce using rule 11 (statement -> continueup_statement .)
    TURNRIGHT       reduce using rule 11 (statement -> continueup_statement .)
    TURNLEFT        reduce using rule 11 (statement -> continueup_statement .)
    POS             reduce using rule 11 (statement -> continueup_statement .)
    POSX            reduce using rule 11 (statement -> continueup_statement .)
    POSY            reduce using rule 11 (statement -> continueup_statement .)
    USECOLOR        reduce using rule 11 (statement -> continueup_statement .)
    DOWN            reduce using rule 11 (statement -> continueup_statement .)
    UP              reduce using rule 11 (statement -> continueup_statement .)
    BEGINNING       reduce using rule 11 (statement -> continueup_statement .)
    FOR             reduce using rule 11 (statement -> continueup_statement .)
    CASE            reduce using rule 11 (statement -> continueup_statement .)
    REPEAT          reduce using rule 11 (statement -> continueup_statement .)
    WHILE           reduce using rule 11 (statement -> continueup_statement .)
    $end            reduce using rule 11 (statement -> continueup_statement .)
    RPAREN          reduce using rule 11 (statement -> continueup_statement .)
    COMMA           reduce using rule 11 (statement -> continueup_statement .)
    RBRACKET        reduce using rule 11 (statement -> continueup_statement .)


state 10

    (12) statement -> continuedown_statement .

    SEMI            reduce using rule 12 (statement -> continuedown_statement .)
    EQUAL           reduce using rule 12 (statement -> continuedown_statement .)
    AND             reduce using rule 12 (statement -> continuedown_statement .)
    OR              reduce using rule 12 (statement -> continuedown_statement .)
    GREATER         reduce using rule 12 (statement -> continuedown_statement .)
    SMALLER         reduce using rule 12 (statement -> continuedown_statement .)
    SUBSTR          reduce using rule 12 (statement -> continuedown_statement .)
    RANDOM          reduce using rule 12 (statement -> continuedown_statement .)
    MULT            reduce using rule 12 (statement -> continuedown_statement .)
    DIV             reduce using rule 12 (statement -> continuedown_statement .)
    SUM             reduce using rule 12 (statement -> continuedown_statement .)
    LPAREN          reduce using rule 12 (statement -> continuedown_statement .)
    BOOLEAN         reduce using rule 12 (statement -> continuedown_statement .)
    NUMBER          reduce using rule 12 (statement -> continuedown_statement .)
    ID              reduce using rule 12 (statement -> continuedown_statement .)
    PROC            reduce using rule 12 (statement -> continuedown_statement .)
    CALL            reduce using rule 12 (statement -> continuedown_statement .)
    DEF             reduce using rule 12 (statement -> continuedown_statement .)
    PUT             reduce using rule 12 (statement -> continuedown_statement .)
    ADD             reduce using rule 12 (statement -> continuedown_statement .)
    CONTINUEUP      reduce using rule 12 (statement -> continuedown_statement .)
    CONTINUEDOWN    reduce using rule 12 (statement -> continuedown_statement .)
    CONTINUERIGHT   reduce using rule 12 (statement -> continuedown_statement .)
    CONTINUELEFT    reduce using rule 12 (statement -> continuedown_statement .)
    TURNRIGHT       reduce using rule 12 (statement -> continuedown_statement .)
    TURNLEFT        reduce using rule 12 (statement -> continuedown_statement .)
    POS             reduce using rule 12 (statement -> continuedown_statement .)
    POSX            reduce using rule 12 (statement -> continuedown_statement .)
    POSY            reduce using rule 12 (statement -> continuedown_statement .)
    USECOLOR        reduce using rule 12 (statement -> continuedown_statement .)
    DOWN            reduce using rule 12 (statement -> continuedown_statement .)
    UP              reduce using rule 12 (statement -> continuedown_statement .)
    BEGINNING       reduce using rule 12 (statement -> continuedown_statement .)
    FOR             reduce using rule 12 (statement -> continuedown_statement .)
    CASE            reduce using rule 12 (statement -> continuedown_statement .)
    REPEAT          reduce using rule 12 (statement -> continuedown_statement .)
    WHILE           reduce using rule 12 (statement -> continuedown_statement .)
    $end            reduce using rule 12 (statement -> continuedown_statement .)
    RPAREN          reduce using rule 12 (statement -> continuedown_statement .)
    COMMA           reduce using rule 12 (statement -> continuedown_statement .)
    RBRACKET        reduce using rule 12 (statement -> continuedown_statement .)


state 11

    (13) statement -> continueright_statement .

    SEMI            reduce using rule 13 (statement -> continueright_statement .)
    EQUAL           reduce using rule 13 (statement -> continueright_statement .)
    AND             reduce using rule 13 (statement -> continueright_statement .)
    OR              reduce using rule 13 (statement -> continueright_statement .)
    GREATER         reduce using rule 13 (statement -> continueright_statement .)
    SMALLER         reduce using rule 13 (statement -> continueright_statement .)
    SUBSTR          reduce using rule 13 (statement -> continueright_statement .)
    RANDOM          reduce using rule 13 (statement -> continueright_statement .)
    MULT            reduce using rule 13 (statement -> continueright_statement .)
    DIV             reduce using rule 13 (statement -> continueright_statement .)
    SUM             reduce using rule 13 (statement -> continueright_statement .)
    LPAREN          reduce using rule 13 (statement -> continueright_statement .)
    BOOLEAN         reduce using rule 13 (statement -> continueright_statement .)
    NUMBER          reduce using rule 13 (statement -> continueright_statement .)
    ID              reduce using rule 13 (statement -> continueright_statement .)
    PROC            reduce using rule 13 (statement -> continueright_statement .)
    CALL            reduce using rule 13 (statement -> continueright_statement .)
    DEF             reduce using rule 13 (statement -> continueright_statement .)
    PUT             reduce using rule 13 (statement -> continueright_statement .)
    ADD             reduce using rule 13 (statement -> continueright_statement .)
    CONTINUEUP      reduce using rule 13 (statement -> continueright_statement .)
    CONTINUEDOWN    reduce using rule 13 (statement -> continueright_statement .)
    CONTINUERIGHT   reduce using rule 13 (statement -> continueright_statement .)
    CONTINUELEFT    reduce using rule 13 (statement -> continueright_statement .)
    TURNRIGHT       reduce using rule 13 (statement -> continueright_statement .)
    TURNLEFT        reduce using rule 13 (statement -> continueright_statement .)
    POS             reduce using rule 13 (statement -> continueright_statement .)
    POSX            reduce using rule 13 (statement -> continueright_statement .)
    POSY            reduce using rule 13 (statement -> continueright_statement .)
    USECOLOR        reduce using rule 13 (statement -> continueright_statement .)
    DOWN            reduce using rule 13 (statement -> continueright_statement .)
    UP              reduce using rule 13 (statement -> continueright_statement .)
    BEGINNING       reduce using rule 13 (statement -> continueright_statement .)
    FOR             reduce using rule 13 (statement -> continueright_statement .)
    CASE            reduce using rule 13 (statement -> continueright_statement .)
    REPEAT          reduce using rule 13 (statement -> continueright_statement .)
    WHILE           reduce using rule 13 (statement -> continueright_statement .)
    $end            reduce using rule 13 (statement -> continueright_statement .)
    RPAREN          reduce using rule 13 (statement -> continueright_statement .)
    COMMA           reduce using rule 13 (statement -> continueright_statement .)
    RBRACKET        reduce using rule 13 (statement -> continueright_statement .)


state 12

    (14) statement -> continueleft_statement .

    SEMI            reduce using rule 14 (statement -> continueleft_statement .)
    EQUAL           reduce using rule 14 (statement -> continueleft_statement .)
    AND             reduce using rule 14 (statement -> continueleft_statement .)
    OR              reduce using rule 14 (statement -> continueleft_statement .)
    GREATER         reduce using rule 14 (statement -> continueleft_statement .)
    SMALLER         reduce using rule 14 (statement -> continueleft_statement .)
    SUBSTR          reduce using rule 14 (statement -> continueleft_statement .)
    RANDOM          reduce using rule 14 (statement -> continueleft_statement .)
    MULT            reduce using rule 14 (statement -> continueleft_statement .)
    DIV             reduce using rule 14 (statement -> continueleft_statement .)
    SUM             reduce using rule 14 (statement -> continueleft_statement .)
    LPAREN          reduce using rule 14 (statement -> continueleft_statement .)
    BOOLEAN         reduce using rule 14 (statement -> continueleft_statement .)
    NUMBER          reduce using rule 14 (statement -> continueleft_statement .)
    ID              reduce using rule 14 (statement -> continueleft_statement .)
    PROC            reduce using rule 14 (statement -> continueleft_statement .)
    CALL            reduce using rule 14 (statement -> continueleft_statement .)
    DEF             reduce using rule 14 (statement -> continueleft_statement .)
    PUT             reduce using rule 14 (statement -> continueleft_statement .)
    ADD             reduce using rule 14 (statement -> continueleft_statement .)
    CONTINUEUP      reduce using rule 14 (statement -> continueleft_statement .)
    CONTINUEDOWN    reduce using rule 14 (statement -> continueleft_statement .)
    CONTINUERIGHT   reduce using rule 14 (statement -> continueleft_statement .)
    CONTINUELEFT    reduce using rule 14 (statement -> continueleft_statement .)
    TURNRIGHT       reduce using rule 14 (statement -> continueleft_statement .)
    TURNLEFT        reduce using rule 14 (statement -> continueleft_statement .)
    POS             reduce using rule 14 (statement -> continueleft_statement .)
    POSX            reduce using rule 14 (statement -> continueleft_statement .)
    POSY            reduce using rule 14 (statement -> continueleft_statement .)
    USECOLOR        reduce using rule 14 (statement -> continueleft_statement .)
    DOWN            reduce using rule 14 (statement -> continueleft_statement .)
    UP              reduce using rule 14 (statement -> continueleft_statement .)
    BEGINNING       reduce using rule 14 (statement -> continueleft_statement .)
    FOR             reduce using rule 14 (statement -> continueleft_statement .)
    CASE            reduce using rule 14 (statement -> continueleft_statement .)
    REPEAT          reduce using rule 14 (statement -> continueleft_statement .)
    WHILE           reduce using rule 14 (statement -> continueleft_statement .)
    $end            reduce using rule 14 (statement -> continueleft_statement .)
    RPAREN          reduce using rule 14 (statement -> continueleft_statement .)
    COMMA           reduce using rule 14 (statement -> continueleft_statement .)
    RBRACKET        reduce using rule 14 (statement -> continueleft_statement .)


state 13

    (15) statement -> turnright_statement .

    SEMI            reduce using rule 15 (statement -> turnright_statement .)
    EQUAL           reduce using rule 15 (statement -> turnright_statement .)
    AND             reduce using rule 15 (statement -> turnright_statement .)
    OR              reduce using rule 15 (statement -> turnright_statement .)
    GREATER         reduce using rule 15 (statement -> turnright_statement .)
    SMALLER         reduce using rule 15 (statement -> turnright_statement .)
    SUBSTR          reduce using rule 15 (statement -> turnright_statement .)
    RANDOM          reduce using rule 15 (statement -> turnright_statement .)
    MULT            reduce using rule 15 (statement -> turnright_statement .)
    DIV             reduce using rule 15 (statement -> turnright_statement .)
    SUM             reduce using rule 15 (statement -> turnright_statement .)
    LPAREN          reduce using rule 15 (statement -> turnright_statement .)
    BOOLEAN         reduce using rule 15 (statement -> turnright_statement .)
    NUMBER          reduce using rule 15 (statement -> turnright_statement .)
    ID              reduce using rule 15 (statement -> turnright_statement .)
    PROC            reduce using rule 15 (statement -> turnright_statement .)
    CALL            reduce using rule 15 (statement -> turnright_statement .)
    DEF             reduce using rule 15 (statement -> turnright_statement .)
    PUT             reduce using rule 15 (statement -> turnright_statement .)
    ADD             reduce using rule 15 (statement -> turnright_statement .)
    CONTINUEUP      reduce using rule 15 (statement -> turnright_statement .)
    CONTINUEDOWN    reduce using rule 15 (statement -> turnright_statement .)
    CONTINUERIGHT   reduce using rule 15 (statement -> turnright_statement .)
    CONTINUELEFT    reduce using rule 15 (statement -> turnright_statement .)
    TURNRIGHT       reduce using rule 15 (statement -> turnright_statement .)
    TURNLEFT        reduce using rule 15 (statement -> turnright_statement .)
    POS             reduce using rule 15 (statement -> turnright_statement .)
    POSX            reduce using rule 15 (statement -> turnright_statement .)
    POSY            reduce using rule 15 (statement -> turnright_statement .)
    USECOLOR        reduce using rule 15 (statement -> turnright_statement .)
    DOWN            reduce using rule 15 (statement -> turnright_statement .)
    UP              reduce using rule 15 (statement -> turnright_statement .)
    BEGINNING       reduce using rule 15 (statement -> turnright_statement .)
    FOR             reduce using rule 15 (statement -> turnright_statement .)
    CASE            reduce using rule 15 (statement -> turnright_statement .)
    REPEAT          reduce using rule 15 (statement -> turnright_statement .)
    WHILE           reduce using rule 15 (statement -> turnright_statement .)
    $end            reduce using rule 15 (statement -> turnright_statement .)
    RPAREN          reduce using rule 15 (statement -> turnright_statement .)
    COMMA           reduce using rule 15 (statement -> turnright_statement .)
    RBRACKET        reduce using rule 15 (statement -> turnright_statement .)


state 14

    (16) statement -> turnleft_statement .

    SEMI            reduce using rule 16 (statement -> turnleft_statement .)
    EQUAL           reduce using rule 16 (statement -> turnleft_statement .)
    AND             reduce using rule 16 (statement -> turnleft_statement .)
    OR              reduce using rule 16 (statement -> turnleft_statement .)
    GREATER         reduce using rule 16 (statement -> turnleft_statement .)
    SMALLER         reduce using rule 16 (statement -> turnleft_statement .)
    SUBSTR          reduce using rule 16 (statement -> turnleft_statement .)
    RANDOM          reduce using rule 16 (statement -> turnleft_statement .)
    MULT            reduce using rule 16 (statement -> turnleft_statement .)
    DIV             reduce using rule 16 (statement -> turnleft_statement .)
    SUM             reduce using rule 16 (statement -> turnleft_statement .)
    LPAREN          reduce using rule 16 (statement -> turnleft_statement .)
    BOOLEAN         reduce using rule 16 (statement -> turnleft_statement .)
    NUMBER          reduce using rule 16 (statement -> turnleft_statement .)
    ID              reduce using rule 16 (statement -> turnleft_statement .)
    PROC            reduce using rule 16 (statement -> turnleft_statement .)
    CALL            reduce using rule 16 (statement -> turnleft_statement .)
    DEF             reduce using rule 16 (statement -> turnleft_statement .)
    PUT             reduce using rule 16 (statement -> turnleft_statement .)
    ADD             reduce using rule 16 (statement -> turnleft_statement .)
    CONTINUEUP      reduce using rule 16 (statement -> turnleft_statement .)
    CONTINUEDOWN    reduce using rule 16 (statement -> turnleft_statement .)
    CONTINUERIGHT   reduce using rule 16 (statement -> turnleft_statement .)
    CONTINUELEFT    reduce using rule 16 (statement -> turnleft_statement .)
    TURNRIGHT       reduce using rule 16 (statement -> turnleft_statement .)
    TURNLEFT        reduce using rule 16 (statement -> turnleft_statement .)
    POS             reduce using rule 16 (statement -> turnleft_statement .)
    POSX            reduce using rule 16 (statement -> turnleft_statement .)
    POSY            reduce using rule 16 (statement -> turnleft_statement .)
    USECOLOR        reduce using rule 16 (statement -> turnleft_statement .)
    DOWN            reduce using rule 16 (statement -> turnleft_statement .)
    UP              reduce using rule 16 (statement -> turnleft_statement .)
    BEGINNING       reduce using rule 16 (statement -> turnleft_statement .)
    FOR             reduce using rule 16 (statement -> turnleft_statement .)
    CASE            reduce using rule 16 (statement -> turnleft_statement .)
    REPEAT          reduce using rule 16 (statement -> turnleft_statement .)
    WHILE           reduce using rule 16 (statement -> turnleft_statement .)
    $end            reduce using rule 16 (statement -> turnleft_statement .)
    RPAREN          reduce using rule 16 (statement -> turnleft_statement .)
    COMMA           reduce using rule 16 (statement -> turnleft_statement .)
    RBRACKET        reduce using rule 16 (statement -> turnleft_statement .)


state 15

    (17) statement -> pos_statement .

    SEMI            reduce using rule 17 (statement -> pos_statement .)
    EQUAL           reduce using rule 17 (statement -> pos_statement .)
    AND             reduce using rule 17 (statement -> pos_statement .)
    OR              reduce using rule 17 (statement -> pos_statement .)
    GREATER         reduce using rule 17 (statement -> pos_statement .)
    SMALLER         reduce using rule 17 (statement -> pos_statement .)
    SUBSTR          reduce using rule 17 (statement -> pos_statement .)
    RANDOM          reduce using rule 17 (statement -> pos_statement .)
    MULT            reduce using rule 17 (statement -> pos_statement .)
    DIV             reduce using rule 17 (statement -> pos_statement .)
    SUM             reduce using rule 17 (statement -> pos_statement .)
    LPAREN          reduce using rule 17 (statement -> pos_statement .)
    BOOLEAN         reduce using rule 17 (statement -> pos_statement .)
    NUMBER          reduce using rule 17 (statement -> pos_statement .)
    ID              reduce using rule 17 (statement -> pos_statement .)
    PROC            reduce using rule 17 (statement -> pos_statement .)
    CALL            reduce using rule 17 (statement -> pos_statement .)
    DEF             reduce using rule 17 (statement -> pos_statement .)
    PUT             reduce using rule 17 (statement -> pos_statement .)
    ADD             reduce using rule 17 (statement -> pos_statement .)
    CONTINUEUP      reduce using rule 17 (statement -> pos_statement .)
    CONTINUEDOWN    reduce using rule 17 (statement -> pos_statement .)
    CONTINUERIGHT   reduce using rule 17 (statement -> pos_statement .)
    CONTINUELEFT    reduce using rule 17 (statement -> pos_statement .)
    TURNRIGHT       reduce using rule 17 (statement -> pos_statement .)
    TURNLEFT        reduce using rule 17 (statement -> pos_statement .)
    POS             reduce using rule 17 (statement -> pos_statement .)
    POSX            reduce using rule 17 (statement -> pos_statement .)
    POSY            reduce using rule 17 (statement -> pos_statement .)
    USECOLOR        reduce using rule 17 (statement -> pos_statement .)
    DOWN            reduce using rule 17 (statement -> pos_statement .)
    UP              reduce using rule 17 (statement -> pos_statement .)
    BEGINNING       reduce using rule 17 (statement -> pos_statement .)
    FOR             reduce using rule 17 (statement -> pos_statement .)
    CASE            reduce using rule 17 (statement -> pos_statement .)
    REPEAT          reduce using rule 17 (statement -> pos_statement .)
    WHILE           reduce using rule 17 (statement -> pos_statement .)
    $end            reduce using rule 17 (statement -> pos_statement .)
    RPAREN          reduce using rule 17 (statement -> pos_statement .)
    COMMA           reduce using rule 17 (statement -> pos_statement .)
    RBRACKET        reduce using rule 17 (statement -> pos_statement .)


state 16

    (18) statement -> posx_statement .

    SEMI            reduce using rule 18 (statement -> posx_statement .)
    EQUAL           reduce using rule 18 (statement -> posx_statement .)
    AND             reduce using rule 18 (statement -> posx_statement .)
    OR              reduce using rule 18 (statement -> posx_statement .)
    GREATER         reduce using rule 18 (statement -> posx_statement .)
    SMALLER         reduce using rule 18 (statement -> posx_statement .)
    SUBSTR          reduce using rule 18 (statement -> posx_statement .)
    RANDOM          reduce using rule 18 (statement -> posx_statement .)
    MULT            reduce using rule 18 (statement -> posx_statement .)
    DIV             reduce using rule 18 (statement -> posx_statement .)
    SUM             reduce using rule 18 (statement -> posx_statement .)
    LPAREN          reduce using rule 18 (statement -> posx_statement .)
    BOOLEAN         reduce using rule 18 (statement -> posx_statement .)
    NUMBER          reduce using rule 18 (statement -> posx_statement .)
    ID              reduce using rule 18 (statement -> posx_statement .)
    PROC            reduce using rule 18 (statement -> posx_statement .)
    CALL            reduce using rule 18 (statement -> posx_statement .)
    DEF             reduce using rule 18 (statement -> posx_statement .)
    PUT             reduce using rule 18 (statement -> posx_statement .)
    ADD             reduce using rule 18 (statement -> posx_statement .)
    CONTINUEUP      reduce using rule 18 (statement -> posx_statement .)
    CONTINUEDOWN    reduce using rule 18 (statement -> posx_statement .)
    CONTINUERIGHT   reduce using rule 18 (statement -> posx_statement .)
    CONTINUELEFT    reduce using rule 18 (statement -> posx_statement .)
    TURNRIGHT       reduce using rule 18 (statement -> posx_statement .)
    TURNLEFT        reduce using rule 18 (statement -> posx_statement .)
    POS             reduce using rule 18 (statement -> posx_statement .)
    POSX            reduce using rule 18 (statement -> posx_statement .)
    POSY            reduce using rule 18 (statement -> posx_statement .)
    USECOLOR        reduce using rule 18 (statement -> posx_statement .)
    DOWN            reduce using rule 18 (statement -> posx_statement .)
    UP              reduce using rule 18 (statement -> posx_statement .)
    BEGINNING       reduce using rule 18 (statement -> posx_statement .)
    FOR             reduce using rule 18 (statement -> posx_statement .)
    CASE            reduce using rule 18 (statement -> posx_statement .)
    REPEAT          reduce using rule 18 (statement -> posx_statement .)
    WHILE           reduce using rule 18 (statement -> posx_statement .)
    $end            reduce using rule 18 (statement -> posx_statement .)
    RPAREN          reduce using rule 18 (statement -> posx_statement .)
    COMMA           reduce using rule 18 (statement -> posx_statement .)
    RBRACKET        reduce using rule 18 (statement -> posx_statement .)


state 17

    (19) statement -> posy_statement .

    SEMI            reduce using rule 19 (statement -> posy_statement .)
    EQUAL           reduce using rule 19 (statement -> posy_statement .)
    AND             reduce using rule 19 (statement -> posy_statement .)
    OR              reduce using rule 19 (statement -> posy_statement .)
    GREATER         reduce using rule 19 (statement -> posy_statement .)
    SMALLER         reduce using rule 19 (statement -> posy_statement .)
    SUBSTR          reduce using rule 19 (statement -> posy_statement .)
    RANDOM          reduce using rule 19 (statement -> posy_statement .)
    MULT            reduce using rule 19 (statement -> posy_statement .)
    DIV             reduce using rule 19 (statement -> posy_statement .)
    SUM             reduce using rule 19 (statement -> posy_statement .)
    LPAREN          reduce using rule 19 (statement -> posy_statement .)
    BOOLEAN         reduce using rule 19 (statement -> posy_statement .)
    NUMBER          reduce using rule 19 (statement -> posy_statement .)
    ID              reduce using rule 19 (statement -> posy_statement .)
    PROC            reduce using rule 19 (statement -> posy_statement .)
    CALL            reduce using rule 19 (statement -> posy_statement .)
    DEF             reduce using rule 19 (statement -> posy_statement .)
    PUT             reduce using rule 19 (statement -> posy_statement .)
    ADD             reduce using rule 19 (statement -> posy_statement .)
    CONTINUEUP      reduce using rule 19 (statement -> posy_statement .)
    CONTINUEDOWN    reduce using rule 19 (statement -> posy_statement .)
    CONTINUERIGHT   reduce using rule 19 (statement -> posy_statement .)
    CONTINUELEFT    reduce using rule 19 (statement -> posy_statement .)
    TURNRIGHT       reduce using rule 19 (statement -> posy_statement .)
    TURNLEFT        reduce using rule 19 (statement -> posy_statement .)
    POS             reduce using rule 19 (statement -> posy_statement .)
    POSX            reduce using rule 19 (statement -> posy_statement .)
    POSY            reduce using rule 19 (statement -> posy_statement .)
    USECOLOR        reduce using rule 19 (statement -> posy_statement .)
    DOWN            reduce using rule 19 (statement -> posy_statement .)
    UP              reduce using rule 19 (statement -> posy_statement .)
    BEGINNING       reduce using rule 19 (statement -> posy_statement .)
    FOR             reduce using rule 19 (statement -> posy_statement .)
    CASE            reduce using rule 19 (statement -> posy_statement .)
    REPEAT          reduce using rule 19 (statement -> posy_statement .)
    WHILE           reduce using rule 19 (statement -> posy_statement .)
    $end            reduce using rule 19 (statement -> posy_statement .)
    RPAREN          reduce using rule 19 (statement -> posy_statement .)
    COMMA           reduce using rule 19 (statement -> posy_statement .)
    RBRACKET        reduce using rule 19 (statement -> posy_statement .)


state 18

    (20) statement -> usecolor_statement .

    SEMI            reduce using rule 20 (statement -> usecolor_statement .)
    EQUAL           reduce using rule 20 (statement -> usecolor_statement .)
    AND             reduce using rule 20 (statement -> usecolor_statement .)
    OR              reduce using rule 20 (statement -> usecolor_statement .)
    GREATER         reduce using rule 20 (statement -> usecolor_statement .)
    SMALLER         reduce using rule 20 (statement -> usecolor_statement .)
    SUBSTR          reduce using rule 20 (statement -> usecolor_statement .)
    RANDOM          reduce using rule 20 (statement -> usecolor_statement .)
    MULT            reduce using rule 20 (statement -> usecolor_statement .)
    DIV             reduce using rule 20 (statement -> usecolor_statement .)
    SUM             reduce using rule 20 (statement -> usecolor_statement .)
    LPAREN          reduce using rule 20 (statement -> usecolor_statement .)
    BOOLEAN         reduce using rule 20 (statement -> usecolor_statement .)
    NUMBER          reduce using rule 20 (statement -> usecolor_statement .)
    ID              reduce using rule 20 (statement -> usecolor_statement .)
    PROC            reduce using rule 20 (statement -> usecolor_statement .)
    CALL            reduce using rule 20 (statement -> usecolor_statement .)
    DEF             reduce using rule 20 (statement -> usecolor_statement .)
    PUT             reduce using rule 20 (statement -> usecolor_statement .)
    ADD             reduce using rule 20 (statement -> usecolor_statement .)
    CONTINUEUP      reduce using rule 20 (statement -> usecolor_statement .)
    CONTINUEDOWN    reduce using rule 20 (statement -> usecolor_statement .)
    CONTINUERIGHT   reduce using rule 20 (statement -> usecolor_statement .)
    CONTINUELEFT    reduce using rule 20 (statement -> usecolor_statement .)
    TURNRIGHT       reduce using rule 20 (statement -> usecolor_statement .)
    TURNLEFT        reduce using rule 20 (statement -> usecolor_statement .)
    POS             reduce using rule 20 (statement -> usecolor_statement .)
    POSX            reduce using rule 20 (statement -> usecolor_statement .)
    POSY            reduce using rule 20 (statement -> usecolor_statement .)
    USECOLOR        reduce using rule 20 (statement -> usecolor_statement .)
    DOWN            reduce using rule 20 (statement -> usecolor_statement .)
    UP              reduce using rule 20 (statement -> usecolor_statement .)
    BEGINNING       reduce using rule 20 (statement -> usecolor_statement .)
    FOR             reduce using rule 20 (statement -> usecolor_statement .)
    CASE            reduce using rule 20 (statement -> usecolor_statement .)
    REPEAT          reduce using rule 20 (statement -> usecolor_statement .)
    WHILE           reduce using rule 20 (statement -> usecolor_statement .)
    $end            reduce using rule 20 (statement -> usecolor_statement .)
    RPAREN          reduce using rule 20 (statement -> usecolor_statement .)
    COMMA           reduce using rule 20 (statement -> usecolor_statement .)
    RBRACKET        reduce using rule 20 (statement -> usecolor_statement .)


state 19

    (21) statement -> down_statement .

    SEMI            reduce using rule 21 (statement -> down_statement .)
    EQUAL           reduce using rule 21 (statement -> down_statement .)
    AND             reduce using rule 21 (statement -> down_statement .)
    OR              reduce using rule 21 (statement -> down_statement .)
    GREATER         reduce using rule 21 (statement -> down_statement .)
    SMALLER         reduce using rule 21 (statement -> down_statement .)
    SUBSTR          reduce using rule 21 (statement -> down_statement .)
    RANDOM          reduce using rule 21 (statement -> down_statement .)
    MULT            reduce using rule 21 (statement -> down_statement .)
    DIV             reduce using rule 21 (statement -> down_statement .)
    SUM             reduce using rule 21 (statement -> down_statement .)
    LPAREN          reduce using rule 21 (statement -> down_statement .)
    BOOLEAN         reduce using rule 21 (statement -> down_statement .)
    NUMBER          reduce using rule 21 (statement -> down_statement .)
    ID              reduce using rule 21 (statement -> down_statement .)
    PROC            reduce using rule 21 (statement -> down_statement .)
    CALL            reduce using rule 21 (statement -> down_statement .)
    DEF             reduce using rule 21 (statement -> down_statement .)
    PUT             reduce using rule 21 (statement -> down_statement .)
    ADD             reduce using rule 21 (statement -> down_statement .)
    CONTINUEUP      reduce using rule 21 (statement -> down_statement .)
    CONTINUEDOWN    reduce using rule 21 (statement -> down_statement .)
    CONTINUERIGHT   reduce using rule 21 (statement -> down_statement .)
    CONTINUELEFT    reduce using rule 21 (statement -> down_statement .)
    TURNRIGHT       reduce using rule 21 (statement -> down_statement .)
    TURNLEFT        reduce using rule 21 (statement -> down_statement .)
    POS             reduce using rule 21 (statement -> down_statement .)
    POSX            reduce using rule 21 (statement -> down_statement .)
    POSY            reduce using rule 21 (statement -> down_statement .)
    USECOLOR        reduce using rule 21 (statement -> down_statement .)
    DOWN            reduce using rule 21 (statement -> down_statement .)
    UP              reduce using rule 21 (statement -> down_statement .)
    BEGINNING       reduce using rule 21 (statement -> down_statement .)
    FOR             reduce using rule 21 (statement -> down_statement .)
    CASE            reduce using rule 21 (statement -> down_statement .)
    REPEAT          reduce using rule 21 (statement -> down_statement .)
    WHILE           reduce using rule 21 (statement -> down_statement .)
    $end            reduce using rule 21 (statement -> down_statement .)
    RPAREN          reduce using rule 21 (statement -> down_statement .)
    COMMA           reduce using rule 21 (statement -> down_statement .)
    RBRACKET        reduce using rule 21 (statement -> down_statement .)


state 20

    (22) statement -> up_statement .

    SEMI            reduce using rule 22 (statement -> up_statement .)
    EQUAL           reduce using rule 22 (statement -> up_statement .)
    AND             reduce using rule 22 (statement -> up_statement .)
    OR              reduce using rule 22 (statement -> up_statement .)
    GREATER         reduce using rule 22 (statement -> up_statement .)
    SMALLER         reduce using rule 22 (statement -> up_statement .)
    SUBSTR          reduce using rule 22 (statement -> up_statement .)
    RANDOM          reduce using rule 22 (statement -> up_statement .)
    MULT            reduce using rule 22 (statement -> up_statement .)
    DIV             reduce using rule 22 (statement -> up_statement .)
    SUM             reduce using rule 22 (statement -> up_statement .)
    LPAREN          reduce using rule 22 (statement -> up_statement .)
    BOOLEAN         reduce using rule 22 (statement -> up_statement .)
    NUMBER          reduce using rule 22 (statement -> up_statement .)
    ID              reduce using rule 22 (statement -> up_statement .)
    PROC            reduce using rule 22 (statement -> up_statement .)
    CALL            reduce using rule 22 (statement -> up_statement .)
    DEF             reduce using rule 22 (statement -> up_statement .)
    PUT             reduce using rule 22 (statement -> up_statement .)
    ADD             reduce using rule 22 (statement -> up_statement .)
    CONTINUEUP      reduce using rule 22 (statement -> up_statement .)
    CONTINUEDOWN    reduce using rule 22 (statement -> up_statement .)
    CONTINUERIGHT   reduce using rule 22 (statement -> up_statement .)
    CONTINUELEFT    reduce using rule 22 (statement -> up_statement .)
    TURNRIGHT       reduce using rule 22 (statement -> up_statement .)
    TURNLEFT        reduce using rule 22 (statement -> up_statement .)
    POS             reduce using rule 22 (statement -> up_statement .)
    POSX            reduce using rule 22 (statement -> up_statement .)
    POSY            reduce using rule 22 (statement -> up_statement .)
    USECOLOR        reduce using rule 22 (statement -> up_statement .)
    DOWN            reduce using rule 22 (statement -> up_statement .)
    UP              reduce using rule 22 (statement -> up_statement .)
    BEGINNING       reduce using rule 22 (statement -> up_statement .)
    FOR             reduce using rule 22 (statement -> up_statement .)
    CASE            reduce using rule 22 (statement -> up_statement .)
    REPEAT          reduce using rule 22 (statement -> up_statement .)
    WHILE           reduce using rule 22 (statement -> up_statement .)
    $end            reduce using rule 22 (statement -> up_statement .)
    RPAREN          reduce using rule 22 (statement -> up_statement .)
    COMMA           reduce using rule 22 (statement -> up_statement .)
    RBRACKET        reduce using rule 22 (statement -> up_statement .)


state 21

    (23) statement -> beginning_statement .

    SEMI            reduce using rule 23 (statement -> beginning_statement .)
    EQUAL           reduce using rule 23 (statement -> beginning_statement .)
    AND             reduce using rule 23 (statement -> beginning_statement .)
    OR              reduce using rule 23 (statement -> beginning_statement .)
    GREATER         reduce using rule 23 (statement -> beginning_statement .)
    SMALLER         reduce using rule 23 (statement -> beginning_statement .)
    SUBSTR          reduce using rule 23 (statement -> beginning_statement .)
    RANDOM          reduce using rule 23 (statement -> beginning_statement .)
    MULT            reduce using rule 23 (statement -> beginning_statement .)
    DIV             reduce using rule 23 (statement -> beginning_statement .)
    SUM             reduce using rule 23 (statement -> beginning_statement .)
    LPAREN          reduce using rule 23 (statement -> beginning_statement .)
    BOOLEAN         reduce using rule 23 (statement -> beginning_statement .)
    NUMBER          reduce using rule 23 (statement -> beginning_statement .)
    ID              reduce using rule 23 (statement -> beginning_statement .)
    PROC            reduce using rule 23 (statement -> beginning_statement .)
    CALL            reduce using rule 23 (statement -> beginning_statement .)
    DEF             reduce using rule 23 (statement -> beginning_statement .)
    PUT             reduce using rule 23 (statement -> beginning_statement .)
    ADD             reduce using rule 23 (statement -> beginning_statement .)
    CONTINUEUP      reduce using rule 23 (statement -> beginning_statement .)
    CONTINUEDOWN    reduce using rule 23 (statement -> beginning_statement .)
    CONTINUERIGHT   reduce using rule 23 (statement -> beginning_statement .)
    CONTINUELEFT    reduce using rule 23 (statement -> beginning_statement .)
    TURNRIGHT       reduce using rule 23 (statement -> beginning_statement .)
    TURNLEFT        reduce using rule 23 (statement -> beginning_statement .)
    POS             reduce using rule 23 (statement -> beginning_statement .)
    POSX            reduce using rule 23 (statement -> beginning_statement .)
    POSY            reduce using rule 23 (statement -> beginning_statement .)
    USECOLOR        reduce using rule 23 (statement -> beginning_statement .)
    DOWN            reduce using rule 23 (statement -> beginning_statement .)
    UP              reduce using rule 23 (statement -> beginning_statement .)
    BEGINNING       reduce using rule 23 (statement -> beginning_statement .)
    FOR             reduce using rule 23 (statement -> beginning_statement .)
    CASE            reduce using rule 23 (statement -> beginning_statement .)
    REPEAT          reduce using rule 23 (statement -> beginning_statement .)
    WHILE           reduce using rule 23 (statement -> beginning_statement .)
    $end            reduce using rule 23 (statement -> beginning_statement .)
    RPAREN          reduce using rule 23 (statement -> beginning_statement .)
    COMMA           reduce using rule 23 (statement -> beginning_statement .)
    RBRACKET        reduce using rule 23 (statement -> beginning_statement .)


state 22

    (24) statement -> for_statement .

    SEMI            reduce using rule 24 (statement -> for_statement .)
    EQUAL           reduce using rule 24 (statement -> for_statement .)
    AND             reduce using rule 24 (statement -> for_statement .)
    OR              reduce using rule 24 (statement -> for_statement .)
    GREATER         reduce using rule 24 (statement -> for_statement .)
    SMALLER         reduce using rule 24 (statement -> for_statement .)
    SUBSTR          reduce using rule 24 (statement -> for_statement .)
    RANDOM          reduce using rule 24 (statement -> for_statement .)
    MULT            reduce using rule 24 (statement -> for_statement .)
    DIV             reduce using rule 24 (statement -> for_statement .)
    SUM             reduce using rule 24 (statement -> for_statement .)
    LPAREN          reduce using rule 24 (statement -> for_statement .)
    BOOLEAN         reduce using rule 24 (statement -> for_statement .)
    NUMBER          reduce using rule 24 (statement -> for_statement .)
    ID              reduce using rule 24 (statement -> for_statement .)
    PROC            reduce using rule 24 (statement -> for_statement .)
    CALL            reduce using rule 24 (statement -> for_statement .)
    DEF             reduce using rule 24 (statement -> for_statement .)
    PUT             reduce using rule 24 (statement -> for_statement .)
    ADD             reduce using rule 24 (statement -> for_statement .)
    CONTINUEUP      reduce using rule 24 (statement -> for_statement .)
    CONTINUEDOWN    reduce using rule 24 (statement -> for_statement .)
    CONTINUERIGHT   reduce using rule 24 (statement -> for_statement .)
    CONTINUELEFT    reduce using rule 24 (statement -> for_statement .)
    TURNRIGHT       reduce using rule 24 (statement -> for_statement .)
    TURNLEFT        reduce using rule 24 (statement -> for_statement .)
    POS             reduce using rule 24 (statement -> for_statement .)
    POSX            reduce using rule 24 (statement -> for_statement .)
    POSY            reduce using rule 24 (statement -> for_statement .)
    USECOLOR        reduce using rule 24 (statement -> for_statement .)
    DOWN            reduce using rule 24 (statement -> for_statement .)
    UP              reduce using rule 24 (statement -> for_statement .)
    BEGINNING       reduce using rule 24 (statement -> for_statement .)
    FOR             reduce using rule 24 (statement -> for_statement .)
    CASE            reduce using rule 24 (statement -> for_statement .)
    REPEAT          reduce using rule 24 (statement -> for_statement .)
    WHILE           reduce using rule 24 (statement -> for_statement .)
    $end            reduce using rule 24 (statement -> for_statement .)
    RPAREN          reduce using rule 24 (statement -> for_statement .)
    COMMA           reduce using rule 24 (statement -> for_statement .)
    RBRACKET        reduce using rule 24 (statement -> for_statement .)


state 23

    (25) statement -> case_statement .

    SEMI            reduce using rule 25 (statement -> case_statement .)
    EQUAL           reduce using rule 25 (statement -> case_statement .)
    AND             reduce using rule 25 (statement -> case_statement .)
    OR              reduce using rule 25 (statement -> case_statement .)
    GREATER         reduce using rule 25 (statement -> case_statement .)
    SMALLER         reduce using rule 25 (statement -> case_statement .)
    SUBSTR          reduce using rule 25 (statement -> case_statement .)
    RANDOM          reduce using rule 25 (statement -> case_statement .)
    MULT            reduce using rule 25 (statement -> case_statement .)
    DIV             reduce using rule 25 (statement -> case_statement .)
    SUM             reduce using rule 25 (statement -> case_statement .)
    LPAREN          reduce using rule 25 (statement -> case_statement .)
    BOOLEAN         reduce using rule 25 (statement -> case_statement .)
    NUMBER          reduce using rule 25 (statement -> case_statement .)
    ID              reduce using rule 25 (statement -> case_statement .)
    PROC            reduce using rule 25 (statement -> case_statement .)
    CALL            reduce using rule 25 (statement -> case_statement .)
    DEF             reduce using rule 25 (statement -> case_statement .)
    PUT             reduce using rule 25 (statement -> case_statement .)
    ADD             reduce using rule 25 (statement -> case_statement .)
    CONTINUEUP      reduce using rule 25 (statement -> case_statement .)
    CONTINUEDOWN    reduce using rule 25 (statement -> case_statement .)
    CONTINUERIGHT   reduce using rule 25 (statement -> case_statement .)
    CONTINUELEFT    reduce using rule 25 (statement -> case_statement .)
    TURNRIGHT       reduce using rule 25 (statement -> case_statement .)
    TURNLEFT        reduce using rule 25 (statement -> case_statement .)
    POS             reduce using rule 25 (statement -> case_statement .)
    POSX            reduce using rule 25 (statement -> case_statement .)
    POSY            reduce using rule 25 (statement -> case_statement .)
    USECOLOR        reduce using rule 25 (statement -> case_statement .)
    DOWN            reduce using rule 25 (statement -> case_statement .)
    UP              reduce using rule 25 (statement -> case_statement .)
    BEGINNING       reduce using rule 25 (statement -> case_statement .)
    FOR             reduce using rule 25 (statement -> case_statement .)
    CASE            reduce using rule 25 (statement -> case_statement .)
    REPEAT          reduce using rule 25 (statement -> case_statement .)
    WHILE           reduce using rule 25 (statement -> case_statement .)
    $end            reduce using rule 25 (statement -> case_statement .)
    RPAREN          reduce using rule 25 (statement -> case_statement .)
    COMMA           reduce using rule 25 (statement -> case_statement .)
    RBRACKET        reduce using rule 25 (statement -> case_statement .)


state 24

    (26) statement -> repeat_statement .

    SEMI            reduce using rule 26 (statement -> repeat_statement .)
    EQUAL           reduce using rule 26 (statement -> repeat_statement .)
    AND             reduce using rule 26 (statement -> repeat_statement .)
    OR              reduce using rule 26 (statement -> repeat_statement .)
    GREATER         reduce using rule 26 (statement -> repeat_statement .)
    SMALLER         reduce using rule 26 (statement -> repeat_statement .)
    SUBSTR          reduce using rule 26 (statement -> repeat_statement .)
    RANDOM          reduce using rule 26 (statement -> repeat_statement .)
    MULT            reduce using rule 26 (statement -> repeat_statement .)
    DIV             reduce using rule 26 (statement -> repeat_statement .)
    SUM             reduce using rule 26 (statement -> repeat_statement .)
    LPAREN          reduce using rule 26 (statement -> repeat_statement .)
    BOOLEAN         reduce using rule 26 (statement -> repeat_statement .)
    NUMBER          reduce using rule 26 (statement -> repeat_statement .)
    ID              reduce using rule 26 (statement -> repeat_statement .)
    PROC            reduce using rule 26 (statement -> repeat_statement .)
    CALL            reduce using rule 26 (statement -> repeat_statement .)
    DEF             reduce using rule 26 (statement -> repeat_statement .)
    PUT             reduce using rule 26 (statement -> repeat_statement .)
    ADD             reduce using rule 26 (statement -> repeat_statement .)
    CONTINUEUP      reduce using rule 26 (statement -> repeat_statement .)
    CONTINUEDOWN    reduce using rule 26 (statement -> repeat_statement .)
    CONTINUERIGHT   reduce using rule 26 (statement -> repeat_statement .)
    CONTINUELEFT    reduce using rule 26 (statement -> repeat_statement .)
    TURNRIGHT       reduce using rule 26 (statement -> repeat_statement .)
    TURNLEFT        reduce using rule 26 (statement -> repeat_statement .)
    POS             reduce using rule 26 (statement -> repeat_statement .)
    POSX            reduce using rule 26 (statement -> repeat_statement .)
    POSY            reduce using rule 26 (statement -> repeat_statement .)
    USECOLOR        reduce using rule 26 (statement -> repeat_statement .)
    DOWN            reduce using rule 26 (statement -> repeat_statement .)
    UP              reduce using rule 26 (statement -> repeat_statement .)
    BEGINNING       reduce using rule 26 (statement -> repeat_statement .)
    FOR             reduce using rule 26 (statement -> repeat_statement .)
    CASE            reduce using rule 26 (statement -> repeat_statement .)
    REPEAT          reduce using rule 26 (statement -> repeat_statement .)
    WHILE           reduce using rule 26 (statement -> repeat_statement .)
    $end            reduce using rule 26 (statement -> repeat_statement .)
    RPAREN          reduce using rule 26 (statement -> repeat_statement .)
    COMMA           reduce using rule 26 (statement -> repeat_statement .)
    RBRACKET        reduce using rule 26 (statement -> repeat_statement .)


state 25

    (27) statement -> while_statement .

    SEMI            reduce using rule 27 (statement -> while_statement .)
    EQUAL           reduce using rule 27 (statement -> while_statement .)
    AND             reduce using rule 27 (statement -> while_statement .)
    OR              reduce using rule 27 (statement -> while_statement .)
    GREATER         reduce using rule 27 (statement -> while_statement .)
    SMALLER         reduce using rule 27 (statement -> while_statement .)
    SUBSTR          reduce using rule 27 (statement -> while_statement .)
    RANDOM          reduce using rule 27 (statement -> while_statement .)
    MULT            reduce using rule 27 (statement -> while_statement .)
    DIV             reduce using rule 27 (statement -> while_statement .)
    SUM             reduce using rule 27 (statement -> while_statement .)
    LPAREN          reduce using rule 27 (statement -> while_statement .)
    BOOLEAN         reduce using rule 27 (statement -> while_statement .)
    NUMBER          reduce using rule 27 (statement -> while_statement .)
    ID              reduce using rule 27 (statement -> while_statement .)
    PROC            reduce using rule 27 (statement -> while_statement .)
    CALL            reduce using rule 27 (statement -> while_statement .)
    DEF             reduce using rule 27 (statement -> while_statement .)
    PUT             reduce using rule 27 (statement -> while_statement .)
    ADD             reduce using rule 27 (statement -> while_statement .)
    CONTINUEUP      reduce using rule 27 (statement -> while_statement .)
    CONTINUEDOWN    reduce using rule 27 (statement -> while_statement .)
    CONTINUERIGHT   reduce using rule 27 (statement -> while_statement .)
    CONTINUELEFT    reduce using rule 27 (statement -> while_statement .)
    TURNRIGHT       reduce using rule 27 (statement -> while_statement .)
    TURNLEFT        reduce using rule 27 (statement -> while_statement .)
    POS             reduce using rule 27 (statement -> while_statement .)
    POSX            reduce using rule 27 (statement -> while_statement .)
    POSY            reduce using rule 27 (statement -> while_statement .)
    USECOLOR        reduce using rule 27 (statement -> while_statement .)
    DOWN            reduce using rule 27 (statement -> while_statement .)
    UP              reduce using rule 27 (statement -> while_statement .)
    BEGINNING       reduce using rule 27 (statement -> while_statement .)
    FOR             reduce using rule 27 (statement -> while_statement .)
    CASE            reduce using rule 27 (statement -> while_statement .)
    REPEAT          reduce using rule 27 (statement -> while_statement .)
    WHILE           reduce using rule 27 (statement -> while_statement .)
    $end            reduce using rule 27 (statement -> while_statement .)
    RPAREN          reduce using rule 27 (statement -> while_statement .)
    COMMA           reduce using rule 27 (statement -> while_statement .)
    RBRACKET        reduce using rule 27 (statement -> while_statement .)


state 26

    (52) expression -> EQUAL . LPAREN statement COMMA statement RPAREN

    LPAREN          shift and go to state 71


state 27

    (62) expression -> LPAREN . expression_list RPAREN
    (66) expression_list -> . statement
    (67) expression_list -> . expression_list statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    expression_list                shift and go to state 72
    statement                      shift and go to state 73
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 28

    (53) expression -> AND . LPAREN statement COMMA statement RPAREN

    LPAREN          shift and go to state 74


state 29

    (54) expression -> OR . LPAREN statement COMMA statement RPAREN

    LPAREN          shift and go to state 75


state 30

    (55) expression -> GREATER . LPAREN statement COMMA statement RPAREN

    LPAREN          shift and go to state 76


state 31

    (56) expression -> SMALLER . LPAREN statement COMMA statement RPAREN

    LPAREN          shift and go to state 77


state 32

    (57) expression -> SUBSTR . LPAREN statement COMMA statement RPAREN

    LPAREN          shift and go to state 78


state 33

    (58) expression -> RANDOM . LPAREN statement RPAREN

    LPAREN          shift and go to state 79


state 34

    (59) expression -> MULT . LPAREN statement COMMA statement RPAREN

    LPAREN          shift and go to state 80


state 35

    (60) expression -> DIV . LPAREN statement COMMA statement RPAREN

    LPAREN          shift and go to state 81


state 36

    (61) expression -> SUM . LPAREN statement COMMA statement RPAREN

    LPAREN          shift and go to state 82


state 37

    (65) expression -> BOOLEAN .

    PLUS            reduce using rule 65 (expression -> BOOLEAN .)
    MINUS           reduce using rule 65 (expression -> BOOLEAN .)
    MULT_OP         reduce using rule 65 (expression -> BOOLEAN .)
    DIV_OP          reduce using rule 65 (expression -> BOOLEAN .)
    LT              reduce using rule 65 (expression -> BOOLEAN .)
    GT              reduce using rule 65 (expression -> BOOLEAN .)
    EQUALS          reduce using rule 65 (expression -> BOOLEAN .)
    SEMI            reduce using rule 65 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 65 (expression -> BOOLEAN .)
    AND             reduce using rule 65 (expression -> BOOLEAN .)
    OR              reduce using rule 65 (expression -> BOOLEAN .)
    GREATER         reduce using rule 65 (expression -> BOOLEAN .)
    SMALLER         reduce using rule 65 (expression -> BOOLEAN .)
    SUBSTR          reduce using rule 65 (expression -> BOOLEAN .)
    RANDOM          reduce using rule 65 (expression -> BOOLEAN .)
    MULT            reduce using rule 65 (expression -> BOOLEAN .)
    DIV             reduce using rule 65 (expression -> BOOLEAN .)
    SUM             reduce using rule 65 (expression -> BOOLEAN .)
    LPAREN          reduce using rule 65 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 65 (expression -> BOOLEAN .)
    NUMBER          reduce using rule 65 (expression -> BOOLEAN .)
    ID              reduce using rule 65 (expression -> BOOLEAN .)
    PROC            reduce using rule 65 (expression -> BOOLEAN .)
    CALL            reduce using rule 65 (expression -> BOOLEAN .)
    DEF             reduce using rule 65 (expression -> BOOLEAN .)
    PUT             reduce using rule 65 (expression -> BOOLEAN .)
    ADD             reduce using rule 65 (expression -> BOOLEAN .)
    CONTINUEUP      reduce using rule 65 (expression -> BOOLEAN .)
    CONTINUEDOWN    reduce using rule 65 (expression -> BOOLEAN .)
    CONTINUERIGHT   reduce using rule 65 (expression -> BOOLEAN .)
    CONTINUELEFT    reduce using rule 65 (expression -> BOOLEAN .)
    TURNRIGHT       reduce using rule 65 (expression -> BOOLEAN .)
    TURNLEFT        reduce using rule 65 (expression -> BOOLEAN .)
    POS             reduce using rule 65 (expression -> BOOLEAN .)
    POSX            reduce using rule 65 (expression -> BOOLEAN .)
    POSY            reduce using rule 65 (expression -> BOOLEAN .)
    USECOLOR        reduce using rule 65 (expression -> BOOLEAN .)
    DOWN            reduce using rule 65 (expression -> BOOLEAN .)
    UP              reduce using rule 65 (expression -> BOOLEAN .)
    BEGINNING       reduce using rule 65 (expression -> BOOLEAN .)
    FOR             reduce using rule 65 (expression -> BOOLEAN .)
    CASE            reduce using rule 65 (expression -> BOOLEAN .)
    REPEAT          reduce using rule 65 (expression -> BOOLEAN .)
    WHILE           reduce using rule 65 (expression -> BOOLEAN .)
    $end            reduce using rule 65 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 65 (expression -> BOOLEAN .)
    COMMA           reduce using rule 65 (expression -> BOOLEAN .)
    RBRACKET        reduce using rule 65 (expression -> BOOLEAN .)
    TO              reduce using rule 65 (expression -> BOOLEAN .)
    THEN            reduce using rule 65 (expression -> BOOLEAN .)


state 38

    (68) expression -> NUMBER .

    PLUS            reduce using rule 68 (expression -> NUMBER .)
    MINUS           reduce using rule 68 (expression -> NUMBER .)
    MULT_OP         reduce using rule 68 (expression -> NUMBER .)
    DIV_OP          reduce using rule 68 (expression -> NUMBER .)
    LT              reduce using rule 68 (expression -> NUMBER .)
    GT              reduce using rule 68 (expression -> NUMBER .)
    EQUALS          reduce using rule 68 (expression -> NUMBER .)
    SEMI            reduce using rule 68 (expression -> NUMBER .)
    EQUAL           reduce using rule 68 (expression -> NUMBER .)
    AND             reduce using rule 68 (expression -> NUMBER .)
    OR              reduce using rule 68 (expression -> NUMBER .)
    GREATER         reduce using rule 68 (expression -> NUMBER .)
    SMALLER         reduce using rule 68 (expression -> NUMBER .)
    SUBSTR          reduce using rule 68 (expression -> NUMBER .)
    RANDOM          reduce using rule 68 (expression -> NUMBER .)
    MULT            reduce using rule 68 (expression -> NUMBER .)
    DIV             reduce using rule 68 (expression -> NUMBER .)
    SUM             reduce using rule 68 (expression -> NUMBER .)
    LPAREN          reduce using rule 68 (expression -> NUMBER .)
    BOOLEAN         reduce using rule 68 (expression -> NUMBER .)
    NUMBER          reduce using rule 68 (expression -> NUMBER .)
    ID              reduce using rule 68 (expression -> NUMBER .)
    PROC            reduce using rule 68 (expression -> NUMBER .)
    CALL            reduce using rule 68 (expression -> NUMBER .)
    DEF             reduce using rule 68 (expression -> NUMBER .)
    PUT             reduce using rule 68 (expression -> NUMBER .)
    ADD             reduce using rule 68 (expression -> NUMBER .)
    CONTINUEUP      reduce using rule 68 (expression -> NUMBER .)
    CONTINUEDOWN    reduce using rule 68 (expression -> NUMBER .)
    CONTINUERIGHT   reduce using rule 68 (expression -> NUMBER .)
    CONTINUELEFT    reduce using rule 68 (expression -> NUMBER .)
    TURNRIGHT       reduce using rule 68 (expression -> NUMBER .)
    TURNLEFT        reduce using rule 68 (expression -> NUMBER .)
    POS             reduce using rule 68 (expression -> NUMBER .)
    POSX            reduce using rule 68 (expression -> NUMBER .)
    POSY            reduce using rule 68 (expression -> NUMBER .)
    USECOLOR        reduce using rule 68 (expression -> NUMBER .)
    DOWN            reduce using rule 68 (expression -> NUMBER .)
    UP              reduce using rule 68 (expression -> NUMBER .)
    BEGINNING       reduce using rule 68 (expression -> NUMBER .)
    FOR             reduce using rule 68 (expression -> NUMBER .)
    CASE            reduce using rule 68 (expression -> NUMBER .)
    REPEAT          reduce using rule 68 (expression -> NUMBER .)
    WHILE           reduce using rule 68 (expression -> NUMBER .)
    $end            reduce using rule 68 (expression -> NUMBER .)
    RPAREN          reduce using rule 68 (expression -> NUMBER .)
    COMMA           reduce using rule 68 (expression -> NUMBER .)
    RBRACKET        reduce using rule 68 (expression -> NUMBER .)
    TO              reduce using rule 68 (expression -> NUMBER .)
    THEN            reduce using rule 68 (expression -> NUMBER .)


state 39

    (69) expression -> ID .

    PLUS            reduce using rule 69 (expression -> ID .)
    MINUS           reduce using rule 69 (expression -> ID .)
    MULT_OP         reduce using rule 69 (expression -> ID .)
    DIV_OP          reduce using rule 69 (expression -> ID .)
    LT              reduce using rule 69 (expression -> ID .)
    GT              reduce using rule 69 (expression -> ID .)
    EQUALS          reduce using rule 69 (expression -> ID .)
    SEMI            reduce using rule 69 (expression -> ID .)
    EQUAL           reduce using rule 69 (expression -> ID .)
    AND             reduce using rule 69 (expression -> ID .)
    OR              reduce using rule 69 (expression -> ID .)
    GREATER         reduce using rule 69 (expression -> ID .)
    SMALLER         reduce using rule 69 (expression -> ID .)
    SUBSTR          reduce using rule 69 (expression -> ID .)
    RANDOM          reduce using rule 69 (expression -> ID .)
    MULT            reduce using rule 69 (expression -> ID .)
    DIV             reduce using rule 69 (expression -> ID .)
    SUM             reduce using rule 69 (expression -> ID .)
    LPAREN          reduce using rule 69 (expression -> ID .)
    BOOLEAN         reduce using rule 69 (expression -> ID .)
    NUMBER          reduce using rule 69 (expression -> ID .)
    ID              reduce using rule 69 (expression -> ID .)
    PROC            reduce using rule 69 (expression -> ID .)
    CALL            reduce using rule 69 (expression -> ID .)
    DEF             reduce using rule 69 (expression -> ID .)
    PUT             reduce using rule 69 (expression -> ID .)
    ADD             reduce using rule 69 (expression -> ID .)
    CONTINUEUP      reduce using rule 69 (expression -> ID .)
    CONTINUEDOWN    reduce using rule 69 (expression -> ID .)
    CONTINUERIGHT   reduce using rule 69 (expression -> ID .)
    CONTINUELEFT    reduce using rule 69 (expression -> ID .)
    TURNRIGHT       reduce using rule 69 (expression -> ID .)
    TURNLEFT        reduce using rule 69 (expression -> ID .)
    POS             reduce using rule 69 (expression -> ID .)
    POSX            reduce using rule 69 (expression -> ID .)
    POSY            reduce using rule 69 (expression -> ID .)
    USECOLOR        reduce using rule 69 (expression -> ID .)
    DOWN            reduce using rule 69 (expression -> ID .)
    UP              reduce using rule 69 (expression -> ID .)
    BEGINNING       reduce using rule 69 (expression -> ID .)
    FOR             reduce using rule 69 (expression -> ID .)
    CASE            reduce using rule 69 (expression -> ID .)
    REPEAT          reduce using rule 69 (expression -> ID .)
    WHILE           reduce using rule 69 (expression -> ID .)
    $end            reduce using rule 69 (expression -> ID .)
    RPAREN          reduce using rule 69 (expression -> ID .)
    COMMA           reduce using rule 69 (expression -> ID .)
    RBRACKET        reduce using rule 69 (expression -> ID .)
    TO              reduce using rule 69 (expression -> ID .)
    THEN            reduce using rule 69 (expression -> ID .)


state 40

    (79) procedure_statement -> PROC . ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END

    ID              shift and go to state 83


state 41

    (80) call_statement -> CALL . ID LPAREN parameter_list RPAREN

    ID              shift and go to state 84


state 42

    (35) def_statement -> DEF . LPAREN ID COMMA statement RPAREN

    LPAREN          shift and go to state 85


state 43

    (36) put_statement -> PUT . LPAREN ID COMMA statement RPAREN

    LPAREN          shift and go to state 86


state 44

    (37) add_statement -> ADD . LPAREN ID RPAREN
    (38) add_statement -> ADD . LPAREN ID COMMA statement RPAREN

    LPAREN          shift and go to state 87


state 45

    (39) continueup_statement -> CONTINUEUP . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 88
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 46

    (40) continuedown_statement -> CONTINUEDOWN . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 89
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 47

    (41) continueright_statement -> CONTINUERIGHT . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 90
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 48

    (42) continueleft_statement -> CONTINUELEFT . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 91
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 49

    (43) turnright_statement -> TURNRIGHT . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 92
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 50

    (44) turnleft_statement -> TURNLEFT . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 93
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 51

    (45) pos_statement -> POS . LPAREN statement COMMA statement RPAREN

    LPAREN          shift and go to state 94


state 52

    (46) posx_statement -> POSX . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 95
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 53

    (47) posy_statement -> POSY . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 96
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 54

    (48) usecolor_statement -> USECOLOR . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 97
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 55

    (49) down_statement -> DOWN .

    SEMI            reduce using rule 49 (down_statement -> DOWN .)
    EQUAL           reduce using rule 49 (down_statement -> DOWN .)
    AND             reduce using rule 49 (down_statement -> DOWN .)
    OR              reduce using rule 49 (down_statement -> DOWN .)
    GREATER         reduce using rule 49 (down_statement -> DOWN .)
    SMALLER         reduce using rule 49 (down_statement -> DOWN .)
    SUBSTR          reduce using rule 49 (down_statement -> DOWN .)
    RANDOM          reduce using rule 49 (down_statement -> DOWN .)
    MULT            reduce using rule 49 (down_statement -> DOWN .)
    DIV             reduce using rule 49 (down_statement -> DOWN .)
    SUM             reduce using rule 49 (down_statement -> DOWN .)
    LPAREN          reduce using rule 49 (down_statement -> DOWN .)
    BOOLEAN         reduce using rule 49 (down_statement -> DOWN .)
    NUMBER          reduce using rule 49 (down_statement -> DOWN .)
    ID              reduce using rule 49 (down_statement -> DOWN .)
    PROC            reduce using rule 49 (down_statement -> DOWN .)
    CALL            reduce using rule 49 (down_statement -> DOWN .)
    DEF             reduce using rule 49 (down_statement -> DOWN .)
    PUT             reduce using rule 49 (down_statement -> DOWN .)
    ADD             reduce using rule 49 (down_statement -> DOWN .)
    CONTINUEUP      reduce using rule 49 (down_statement -> DOWN .)
    CONTINUEDOWN    reduce using rule 49 (down_statement -> DOWN .)
    CONTINUERIGHT   reduce using rule 49 (down_statement -> DOWN .)
    CONTINUELEFT    reduce using rule 49 (down_statement -> DOWN .)
    TURNRIGHT       reduce using rule 49 (down_statement -> DOWN .)
    TURNLEFT        reduce using rule 49 (down_statement -> DOWN .)
    POS             reduce using rule 49 (down_statement -> DOWN .)
    POSX            reduce using rule 49 (down_statement -> DOWN .)
    POSY            reduce using rule 49 (down_statement -> DOWN .)
    USECOLOR        reduce using rule 49 (down_statement -> DOWN .)
    DOWN            reduce using rule 49 (down_statement -> DOWN .)
    UP              reduce using rule 49 (down_statement -> DOWN .)
    BEGINNING       reduce using rule 49 (down_statement -> DOWN .)
    FOR             reduce using rule 49 (down_statement -> DOWN .)
    CASE            reduce using rule 49 (down_statement -> DOWN .)
    REPEAT          reduce using rule 49 (down_statement -> DOWN .)
    WHILE           reduce using rule 49 (down_statement -> DOWN .)
    $end            reduce using rule 49 (down_statement -> DOWN .)
    RPAREN          reduce using rule 49 (down_statement -> DOWN .)
    COMMA           reduce using rule 49 (down_statement -> DOWN .)
    RBRACKET        reduce using rule 49 (down_statement -> DOWN .)


state 56

    (50) up_statement -> UP .

    SEMI            reduce using rule 50 (up_statement -> UP .)
    EQUAL           reduce using rule 50 (up_statement -> UP .)
    AND             reduce using rule 50 (up_statement -> UP .)
    OR              reduce using rule 50 (up_statement -> UP .)
    GREATER         reduce using rule 50 (up_statement -> UP .)
    SMALLER         reduce using rule 50 (up_statement -> UP .)
    SUBSTR          reduce using rule 50 (up_statement -> UP .)
    RANDOM          reduce using rule 50 (up_statement -> UP .)
    MULT            reduce using rule 50 (up_statement -> UP .)
    DIV             reduce using rule 50 (up_statement -> UP .)
    SUM             reduce using rule 50 (up_statement -> UP .)
    LPAREN          reduce using rule 50 (up_statement -> UP .)
    BOOLEAN         reduce using rule 50 (up_statement -> UP .)
    NUMBER          reduce using rule 50 (up_statement -> UP .)
    ID              reduce using rule 50 (up_statement -> UP .)
    PROC            reduce using rule 50 (up_statement -> UP .)
    CALL            reduce using rule 50 (up_statement -> UP .)
    DEF             reduce using rule 50 (up_statement -> UP .)
    PUT             reduce using rule 50 (up_statement -> UP .)
    ADD             reduce using rule 50 (up_statement -> UP .)
    CONTINUEUP      reduce using rule 50 (up_statement -> UP .)
    CONTINUEDOWN    reduce using rule 50 (up_statement -> UP .)
    CONTINUERIGHT   reduce using rule 50 (up_statement -> UP .)
    CONTINUELEFT    reduce using rule 50 (up_statement -> UP .)
    TURNRIGHT       reduce using rule 50 (up_statement -> UP .)
    TURNLEFT        reduce using rule 50 (up_statement -> UP .)
    POS             reduce using rule 50 (up_statement -> UP .)
    POSX            reduce using rule 50 (up_statement -> UP .)
    POSY            reduce using rule 50 (up_statement -> UP .)
    USECOLOR        reduce using rule 50 (up_statement -> UP .)
    DOWN            reduce using rule 50 (up_statement -> UP .)
    UP              reduce using rule 50 (up_statement -> UP .)
    BEGINNING       reduce using rule 50 (up_statement -> UP .)
    FOR             reduce using rule 50 (up_statement -> UP .)
    CASE            reduce using rule 50 (up_statement -> UP .)
    REPEAT          reduce using rule 50 (up_statement -> UP .)
    WHILE           reduce using rule 50 (up_statement -> UP .)
    $end            reduce using rule 50 (up_statement -> UP .)
    RPAREN          reduce using rule 50 (up_statement -> UP .)
    COMMA           reduce using rule 50 (up_statement -> UP .)
    RBRACKET        reduce using rule 50 (up_statement -> UP .)


state 57

    (51) beginning_statement -> BEGINNING .

    SEMI            reduce using rule 51 (beginning_statement -> BEGINNING .)
    EQUAL           reduce using rule 51 (beginning_statement -> BEGINNING .)
    AND             reduce using rule 51 (beginning_statement -> BEGINNING .)
    OR              reduce using rule 51 (beginning_statement -> BEGINNING .)
    GREATER         reduce using rule 51 (beginning_statement -> BEGINNING .)
    SMALLER         reduce using rule 51 (beginning_statement -> BEGINNING .)
    SUBSTR          reduce using rule 51 (beginning_statement -> BEGINNING .)
    RANDOM          reduce using rule 51 (beginning_statement -> BEGINNING .)
    MULT            reduce using rule 51 (beginning_statement -> BEGINNING .)
    DIV             reduce using rule 51 (beginning_statement -> BEGINNING .)
    SUM             reduce using rule 51 (beginning_statement -> BEGINNING .)
    LPAREN          reduce using rule 51 (beginning_statement -> BEGINNING .)
    BOOLEAN         reduce using rule 51 (beginning_statement -> BEGINNING .)
    NUMBER          reduce using rule 51 (beginning_statement -> BEGINNING .)
    ID              reduce using rule 51 (beginning_statement -> BEGINNING .)
    PROC            reduce using rule 51 (beginning_statement -> BEGINNING .)
    CALL            reduce using rule 51 (beginning_statement -> BEGINNING .)
    DEF             reduce using rule 51 (beginning_statement -> BEGINNING .)
    PUT             reduce using rule 51 (beginning_statement -> BEGINNING .)
    ADD             reduce using rule 51 (beginning_statement -> BEGINNING .)
    CONTINUEUP      reduce using rule 51 (beginning_statement -> BEGINNING .)
    CONTINUEDOWN    reduce using rule 51 (beginning_statement -> BEGINNING .)
    CONTINUERIGHT   reduce using rule 51 (beginning_statement -> BEGINNING .)
    CONTINUELEFT    reduce using rule 51 (beginning_statement -> BEGINNING .)
    TURNRIGHT       reduce using rule 51 (beginning_statement -> BEGINNING .)
    TURNLEFT        reduce using rule 51 (beginning_statement -> BEGINNING .)
    POS             reduce using rule 51 (beginning_statement -> BEGINNING .)
    POSX            reduce using rule 51 (beginning_statement -> BEGINNING .)
    POSY            reduce using rule 51 (beginning_statement -> BEGINNING .)
    USECOLOR        reduce using rule 51 (beginning_statement -> BEGINNING .)
    DOWN            reduce using rule 51 (beginning_statement -> BEGINNING .)
    UP              reduce using rule 51 (beginning_statement -> BEGINNING .)
    BEGINNING       reduce using rule 51 (beginning_statement -> BEGINNING .)
    FOR             reduce using rule 51 (beginning_statement -> BEGINNING .)
    CASE            reduce using rule 51 (beginning_statement -> BEGINNING .)
    REPEAT          reduce using rule 51 (beginning_statement -> BEGINNING .)
    WHILE           reduce using rule 51 (beginning_statement -> BEGINNING .)
    $end            reduce using rule 51 (beginning_statement -> BEGINNING .)
    RPAREN          reduce using rule 51 (beginning_statement -> BEGINNING .)
    COMMA           reduce using rule 51 (beginning_statement -> BEGINNING .)
    RBRACKET        reduce using rule 51 (beginning_statement -> BEGINNING .)


state 58

    (70) for_statement -> FOR . ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP

    ID              shift and go to state 98


state 59

    (72) case_statement -> CASE . ID when_clauses END CASE
    (73) case_statement -> CASE . ID when_clauses ELSE LBRACKET program RBRACKET END CASE

    ID              shift and go to state 99


state 60

    (77) repeat_statement -> REPEAT . LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET

    LBRACKET        shift and go to state 100


state 61

    (78) while_statement -> WHILE . LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    LBRACKET        shift and go to state 101


state 62

    (3) program -> program statement . SEMI
    (4) program -> program statement .

    SEMI            shift and go to state 102
    EQUAL           reduce using rule 4 (program -> program statement .)
    AND             reduce using rule 4 (program -> program statement .)
    OR              reduce using rule 4 (program -> program statement .)
    GREATER         reduce using rule 4 (program -> program statement .)
    SMALLER         reduce using rule 4 (program -> program statement .)
    SUBSTR          reduce using rule 4 (program -> program statement .)
    RANDOM          reduce using rule 4 (program -> program statement .)
    MULT            reduce using rule 4 (program -> program statement .)
    DIV             reduce using rule 4 (program -> program statement .)
    SUM             reduce using rule 4 (program -> program statement .)
    LPAREN          reduce using rule 4 (program -> program statement .)
    BOOLEAN         reduce using rule 4 (program -> program statement .)
    NUMBER          reduce using rule 4 (program -> program statement .)
    ID              reduce using rule 4 (program -> program statement .)
    PROC            reduce using rule 4 (program -> program statement .)
    CALL            reduce using rule 4 (program -> program statement .)
    DEF             reduce using rule 4 (program -> program statement .)
    PUT             reduce using rule 4 (program -> program statement .)
    ADD             reduce using rule 4 (program -> program statement .)
    CONTINUEUP      reduce using rule 4 (program -> program statement .)
    CONTINUEDOWN    reduce using rule 4 (program -> program statement .)
    CONTINUERIGHT   reduce using rule 4 (program -> program statement .)
    CONTINUELEFT    reduce using rule 4 (program -> program statement .)
    TURNRIGHT       reduce using rule 4 (program -> program statement .)
    TURNLEFT        reduce using rule 4 (program -> program statement .)
    POS             reduce using rule 4 (program -> program statement .)
    POSX            reduce using rule 4 (program -> program statement .)
    POSY            reduce using rule 4 (program -> program statement .)
    USECOLOR        reduce using rule 4 (program -> program statement .)
    DOWN            reduce using rule 4 (program -> program statement .)
    UP              reduce using rule 4 (program -> program statement .)
    BEGINNING       reduce using rule 4 (program -> program statement .)
    FOR             reduce using rule 4 (program -> program statement .)
    CASE            reduce using rule 4 (program -> program statement .)
    REPEAT          reduce using rule 4 (program -> program statement .)
    WHILE           reduce using rule 4 (program -> program statement .)
    $end            reduce using rule 4 (program -> program statement .)
    RBRACKET        reduce using rule 4 (program -> program statement .)


state 63

    (1) program -> statement SEMI .

    EQUAL           reduce using rule 1 (program -> statement SEMI .)
    AND             reduce using rule 1 (program -> statement SEMI .)
    OR              reduce using rule 1 (program -> statement SEMI .)
    GREATER         reduce using rule 1 (program -> statement SEMI .)
    SMALLER         reduce using rule 1 (program -> statement SEMI .)
    SUBSTR          reduce using rule 1 (program -> statement SEMI .)
    RANDOM          reduce using rule 1 (program -> statement SEMI .)
    MULT            reduce using rule 1 (program -> statement SEMI .)
    DIV             reduce using rule 1 (program -> statement SEMI .)
    SUM             reduce using rule 1 (program -> statement SEMI .)
    LPAREN          reduce using rule 1 (program -> statement SEMI .)
    BOOLEAN         reduce using rule 1 (program -> statement SEMI .)
    NUMBER          reduce using rule 1 (program -> statement SEMI .)
    ID              reduce using rule 1 (program -> statement SEMI .)
    PROC            reduce using rule 1 (program -> statement SEMI .)
    CALL            reduce using rule 1 (program -> statement SEMI .)
    DEF             reduce using rule 1 (program -> statement SEMI .)
    PUT             reduce using rule 1 (program -> statement SEMI .)
    ADD             reduce using rule 1 (program -> statement SEMI .)
    CONTINUEUP      reduce using rule 1 (program -> statement SEMI .)
    CONTINUEDOWN    reduce using rule 1 (program -> statement SEMI .)
    CONTINUERIGHT   reduce using rule 1 (program -> statement SEMI .)
    CONTINUELEFT    reduce using rule 1 (program -> statement SEMI .)
    TURNRIGHT       reduce using rule 1 (program -> statement SEMI .)
    TURNLEFT        reduce using rule 1 (program -> statement SEMI .)
    POS             reduce using rule 1 (program -> statement SEMI .)
    POSX            reduce using rule 1 (program -> statement SEMI .)
    POSY            reduce using rule 1 (program -> statement SEMI .)
    USECOLOR        reduce using rule 1 (program -> statement SEMI .)
    DOWN            reduce using rule 1 (program -> statement SEMI .)
    UP              reduce using rule 1 (program -> statement SEMI .)
    BEGINNING       reduce using rule 1 (program -> statement SEMI .)
    FOR             reduce using rule 1 (program -> statement SEMI .)
    CASE            reduce using rule 1 (program -> statement SEMI .)
    REPEAT          reduce using rule 1 (program -> statement SEMI .)
    WHILE           reduce using rule 1 (program -> statement SEMI .)
    $end            reduce using rule 1 (program -> statement SEMI .)
    RBRACKET        reduce using rule 1 (program -> statement SEMI .)


state 64

    (28) expression -> expression PLUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 103

state 65

    (29) expression -> expression MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 104

state 66

    (30) expression -> expression MULT_OP . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 105

state 67

    (31) expression -> expression DIV_OP . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 106

state 68

    (32) expression -> expression LT . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 107

state 69

    (33) expression -> expression GT . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 108

state 70

    (34) expression -> expression EQUALS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 109

state 71

    (52) expression -> EQUAL LPAREN . statement COMMA statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 110
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 72

    (62) expression -> LPAREN expression_list . RPAREN
    (67) expression_list -> expression_list . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    RPAREN          shift and go to state 111
    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 112
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 73

    (66) expression_list -> statement .

    RPAREN          reduce using rule 66 (expression_list -> statement .)
    EQUAL           reduce using rule 66 (expression_list -> statement .)
    AND             reduce using rule 66 (expression_list -> statement .)
    OR              reduce using rule 66 (expression_list -> statement .)
    GREATER         reduce using rule 66 (expression_list -> statement .)
    SMALLER         reduce using rule 66 (expression_list -> statement .)
    SUBSTR          reduce using rule 66 (expression_list -> statement .)
    RANDOM          reduce using rule 66 (expression_list -> statement .)
    MULT            reduce using rule 66 (expression_list -> statement .)
    DIV             reduce using rule 66 (expression_list -> statement .)
    SUM             reduce using rule 66 (expression_list -> statement .)
    LPAREN          reduce using rule 66 (expression_list -> statement .)
    BOOLEAN         reduce using rule 66 (expression_list -> statement .)
    NUMBER          reduce using rule 66 (expression_list -> statement .)
    ID              reduce using rule 66 (expression_list -> statement .)
    PROC            reduce using rule 66 (expression_list -> statement .)
    CALL            reduce using rule 66 (expression_list -> statement .)
    DEF             reduce using rule 66 (expression_list -> statement .)
    PUT             reduce using rule 66 (expression_list -> statement .)
    ADD             reduce using rule 66 (expression_list -> statement .)
    CONTINUEUP      reduce using rule 66 (expression_list -> statement .)
    CONTINUEDOWN    reduce using rule 66 (expression_list -> statement .)
    CONTINUERIGHT   reduce using rule 66 (expression_list -> statement .)
    CONTINUELEFT    reduce using rule 66 (expression_list -> statement .)
    TURNRIGHT       reduce using rule 66 (expression_list -> statement .)
    TURNLEFT        reduce using rule 66 (expression_list -> statement .)
    POS             reduce using rule 66 (expression_list -> statement .)
    POSX            reduce using rule 66 (expression_list -> statement .)
    POSY            reduce using rule 66 (expression_list -> statement .)
    USECOLOR        reduce using rule 66 (expression_list -> statement .)
    DOWN            reduce using rule 66 (expression_list -> statement .)
    UP              reduce using rule 66 (expression_list -> statement .)
    BEGINNING       reduce using rule 66 (expression_list -> statement .)
    FOR             reduce using rule 66 (expression_list -> statement .)
    CASE            reduce using rule 66 (expression_list -> statement .)
    REPEAT          reduce using rule 66 (expression_list -> statement .)
    WHILE           reduce using rule 66 (expression_list -> statement .)


state 74

    (53) expression -> AND LPAREN . statement COMMA statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 113
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 75

    (54) expression -> OR LPAREN . statement COMMA statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 114
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 76

    (55) expression -> GREATER LPAREN . statement COMMA statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 115
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 77

    (56) expression -> SMALLER LPAREN . statement COMMA statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 116
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 78

    (57) expression -> SUBSTR LPAREN . statement COMMA statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 117
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 79

    (58) expression -> RANDOM LPAREN . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 118
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 80

    (59) expression -> MULT LPAREN . statement COMMA statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 119
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 81

    (60) expression -> DIV LPAREN . statement COMMA statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 120
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 82

    (61) expression -> SUM LPAREN . statement COMMA statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 121
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 83

    (79) procedure_statement -> PROC ID . LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END

    LPAREN          shift and go to state 122


state 84

    (80) call_statement -> CALL ID . LPAREN parameter_list RPAREN

    LPAREN          shift and go to state 123


state 85

    (35) def_statement -> DEF LPAREN . ID COMMA statement RPAREN

    ID              shift and go to state 124


state 86

    (36) put_statement -> PUT LPAREN . ID COMMA statement RPAREN

    ID              shift and go to state 125


state 87

    (37) add_statement -> ADD LPAREN . ID RPAREN
    (38) add_statement -> ADD LPAREN . ID COMMA statement RPAREN

    ID              shift and go to state 126


state 88

    (39) continueup_statement -> CONTINUEUP statement .

    SEMI            reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    EQUAL           reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    AND             reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    OR              reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    GREATER         reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    SMALLER         reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    SUBSTR          reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    RANDOM          reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    MULT            reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    DIV             reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    SUM             reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    LPAREN          reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    BOOLEAN         reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    NUMBER          reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    ID              reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    PROC            reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    CALL            reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    DEF             reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    PUT             reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    ADD             reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    CONTINUEUP      reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    CONTINUEDOWN    reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    CONTINUERIGHT   reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    CONTINUELEFT    reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    TURNRIGHT       reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    TURNLEFT        reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    POS             reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    POSX            reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    POSY            reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    USECOLOR        reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    DOWN            reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    UP              reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    BEGINNING       reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    FOR             reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    CASE            reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    REPEAT          reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    WHILE           reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    $end            reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    RPAREN          reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    COMMA           reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)
    RBRACKET        reduce using rule 39 (continueup_statement -> CONTINUEUP statement .)


state 89

    (40) continuedown_statement -> CONTINUEDOWN statement .

    SEMI            reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    EQUAL           reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    AND             reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    OR              reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    GREATER         reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    SMALLER         reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    SUBSTR          reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    RANDOM          reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    MULT            reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    DIV             reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    SUM             reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    LPAREN          reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    BOOLEAN         reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    NUMBER          reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    ID              reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    PROC            reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    CALL            reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    DEF             reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    PUT             reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    ADD             reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    CONTINUEUP      reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    CONTINUEDOWN    reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    CONTINUERIGHT   reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    CONTINUELEFT    reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    TURNRIGHT       reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    TURNLEFT        reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    POS             reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    POSX            reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    POSY            reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    USECOLOR        reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    DOWN            reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    UP              reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    BEGINNING       reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    FOR             reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    CASE            reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    REPEAT          reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    WHILE           reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    $end            reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    RPAREN          reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    COMMA           reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)
    RBRACKET        reduce using rule 40 (continuedown_statement -> CONTINUEDOWN statement .)


state 90

    (41) continueright_statement -> CONTINUERIGHT statement .

    SEMI            reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    EQUAL           reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    AND             reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    OR              reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    GREATER         reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    SMALLER         reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    SUBSTR          reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    RANDOM          reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    MULT            reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    DIV             reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    SUM             reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    LPAREN          reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    BOOLEAN         reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    NUMBER          reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    ID              reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    PROC            reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    CALL            reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    DEF             reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    PUT             reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    ADD             reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    CONTINUEUP      reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    CONTINUEDOWN    reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    CONTINUERIGHT   reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    CONTINUELEFT    reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    TURNRIGHT       reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    TURNLEFT        reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    POS             reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    POSX            reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    POSY            reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    USECOLOR        reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    DOWN            reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    UP              reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    BEGINNING       reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    FOR             reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    CASE            reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    REPEAT          reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    WHILE           reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    $end            reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    RPAREN          reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    COMMA           reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)
    RBRACKET        reduce using rule 41 (continueright_statement -> CONTINUERIGHT statement .)


state 91

    (42) continueleft_statement -> CONTINUELEFT statement .

    SEMI            reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    EQUAL           reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    AND             reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    OR              reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    GREATER         reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    SMALLER         reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    SUBSTR          reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    RANDOM          reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    MULT            reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    DIV             reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    SUM             reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    LPAREN          reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    BOOLEAN         reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    NUMBER          reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    ID              reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    PROC            reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    CALL            reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    DEF             reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    PUT             reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    ADD             reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    CONTINUEUP      reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    CONTINUEDOWN    reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    CONTINUERIGHT   reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    CONTINUELEFT    reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    TURNRIGHT       reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    TURNLEFT        reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    POS             reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    POSX            reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    POSY            reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    USECOLOR        reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    DOWN            reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    UP              reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    BEGINNING       reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    FOR             reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    CASE            reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    REPEAT          reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    WHILE           reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    $end            reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    RPAREN          reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    COMMA           reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)
    RBRACKET        reduce using rule 42 (continueleft_statement -> CONTINUELEFT statement .)


state 92

    (43) turnright_statement -> TURNRIGHT statement .

    SEMI            reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    EQUAL           reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    AND             reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    OR              reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    GREATER         reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    SMALLER         reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    SUBSTR          reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    RANDOM          reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    MULT            reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    DIV             reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    SUM             reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    LPAREN          reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    BOOLEAN         reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    NUMBER          reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    ID              reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    PROC            reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    CALL            reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    DEF             reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    PUT             reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    ADD             reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    CONTINUEUP      reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    CONTINUEDOWN    reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    CONTINUERIGHT   reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    CONTINUELEFT    reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    TURNRIGHT       reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    TURNLEFT        reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    POS             reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    POSX            reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    POSY            reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    USECOLOR        reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    DOWN            reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    UP              reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    BEGINNING       reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    FOR             reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    CASE            reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    REPEAT          reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    WHILE           reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    $end            reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    RPAREN          reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    COMMA           reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)
    RBRACKET        reduce using rule 43 (turnright_statement -> TURNRIGHT statement .)


state 93

    (44) turnleft_statement -> TURNLEFT statement .

    SEMI            reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    EQUAL           reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    AND             reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    OR              reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    GREATER         reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    SMALLER         reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    SUBSTR          reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    RANDOM          reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    MULT            reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    DIV             reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    SUM             reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    LPAREN          reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    BOOLEAN         reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    NUMBER          reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    ID              reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    PROC            reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    CALL            reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    DEF             reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    PUT             reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    ADD             reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    CONTINUEUP      reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    CONTINUEDOWN    reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    CONTINUERIGHT   reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    CONTINUELEFT    reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    TURNRIGHT       reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    TURNLEFT        reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    POS             reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    POSX            reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    POSY            reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    USECOLOR        reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    DOWN            reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    UP              reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    BEGINNING       reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    FOR             reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    CASE            reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    REPEAT          reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    WHILE           reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    $end            reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    RPAREN          reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    COMMA           reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)
    RBRACKET        reduce using rule 44 (turnleft_statement -> TURNLEFT statement .)


state 94

    (45) pos_statement -> POS LPAREN . statement COMMA statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 127
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 95

    (46) posx_statement -> POSX statement .

    SEMI            reduce using rule 46 (posx_statement -> POSX statement .)
    EQUAL           reduce using rule 46 (posx_statement -> POSX statement .)
    AND             reduce using rule 46 (posx_statement -> POSX statement .)
    OR              reduce using rule 46 (posx_statement -> POSX statement .)
    GREATER         reduce using rule 46 (posx_statement -> POSX statement .)
    SMALLER         reduce using rule 46 (posx_statement -> POSX statement .)
    SUBSTR          reduce using rule 46 (posx_statement -> POSX statement .)
    RANDOM          reduce using rule 46 (posx_statement -> POSX statement .)
    MULT            reduce using rule 46 (posx_statement -> POSX statement .)
    DIV             reduce using rule 46 (posx_statement -> POSX statement .)
    SUM             reduce using rule 46 (posx_statement -> POSX statement .)
    LPAREN          reduce using rule 46 (posx_statement -> POSX statement .)
    BOOLEAN         reduce using rule 46 (posx_statement -> POSX statement .)
    NUMBER          reduce using rule 46 (posx_statement -> POSX statement .)
    ID              reduce using rule 46 (posx_statement -> POSX statement .)
    PROC            reduce using rule 46 (posx_statement -> POSX statement .)
    CALL            reduce using rule 46 (posx_statement -> POSX statement .)
    DEF             reduce using rule 46 (posx_statement -> POSX statement .)
    PUT             reduce using rule 46 (posx_statement -> POSX statement .)
    ADD             reduce using rule 46 (posx_statement -> POSX statement .)
    CONTINUEUP      reduce using rule 46 (posx_statement -> POSX statement .)
    CONTINUEDOWN    reduce using rule 46 (posx_statement -> POSX statement .)
    CONTINUERIGHT   reduce using rule 46 (posx_statement -> POSX statement .)
    CONTINUELEFT    reduce using rule 46 (posx_statement -> POSX statement .)
    TURNRIGHT       reduce using rule 46 (posx_statement -> POSX statement .)
    TURNLEFT        reduce using rule 46 (posx_statement -> POSX statement .)
    POS             reduce using rule 46 (posx_statement -> POSX statement .)
    POSX            reduce using rule 46 (posx_statement -> POSX statement .)
    POSY            reduce using rule 46 (posx_statement -> POSX statement .)
    USECOLOR        reduce using rule 46 (posx_statement -> POSX statement .)
    DOWN            reduce using rule 46 (posx_statement -> POSX statement .)
    UP              reduce using rule 46 (posx_statement -> POSX statement .)
    BEGINNING       reduce using rule 46 (posx_statement -> POSX statement .)
    FOR             reduce using rule 46 (posx_statement -> POSX statement .)
    CASE            reduce using rule 46 (posx_statement -> POSX statement .)
    REPEAT          reduce using rule 46 (posx_statement -> POSX statement .)
    WHILE           reduce using rule 46 (posx_statement -> POSX statement .)
    $end            reduce using rule 46 (posx_statement -> POSX statement .)
    RPAREN          reduce using rule 46 (posx_statement -> POSX statement .)
    COMMA           reduce using rule 46 (posx_statement -> POSX statement .)
    RBRACKET        reduce using rule 46 (posx_statement -> POSX statement .)


state 96

    (47) posy_statement -> POSY statement .

    SEMI            reduce using rule 47 (posy_statement -> POSY statement .)
    EQUAL           reduce using rule 47 (posy_statement -> POSY statement .)
    AND             reduce using rule 47 (posy_statement -> POSY statement .)
    OR              reduce using rule 47 (posy_statement -> POSY statement .)
    GREATER         reduce using rule 47 (posy_statement -> POSY statement .)
    SMALLER         reduce using rule 47 (posy_statement -> POSY statement .)
    SUBSTR          reduce using rule 47 (posy_statement -> POSY statement .)
    RANDOM          reduce using rule 47 (posy_statement -> POSY statement .)
    MULT            reduce using rule 47 (posy_statement -> POSY statement .)
    DIV             reduce using rule 47 (posy_statement -> POSY statement .)
    SUM             reduce using rule 47 (posy_statement -> POSY statement .)
    LPAREN          reduce using rule 47 (posy_statement -> POSY statement .)
    BOOLEAN         reduce using rule 47 (posy_statement -> POSY statement .)
    NUMBER          reduce using rule 47 (posy_statement -> POSY statement .)
    ID              reduce using rule 47 (posy_statement -> POSY statement .)
    PROC            reduce using rule 47 (posy_statement -> POSY statement .)
    CALL            reduce using rule 47 (posy_statement -> POSY statement .)
    DEF             reduce using rule 47 (posy_statement -> POSY statement .)
    PUT             reduce using rule 47 (posy_statement -> POSY statement .)
    ADD             reduce using rule 47 (posy_statement -> POSY statement .)
    CONTINUEUP      reduce using rule 47 (posy_statement -> POSY statement .)
    CONTINUEDOWN    reduce using rule 47 (posy_statement -> POSY statement .)
    CONTINUERIGHT   reduce using rule 47 (posy_statement -> POSY statement .)
    CONTINUELEFT    reduce using rule 47 (posy_statement -> POSY statement .)
    TURNRIGHT       reduce using rule 47 (posy_statement -> POSY statement .)
    TURNLEFT        reduce using rule 47 (posy_statement -> POSY statement .)
    POS             reduce using rule 47 (posy_statement -> POSY statement .)
    POSX            reduce using rule 47 (posy_statement -> POSY statement .)
    POSY            reduce using rule 47 (posy_statement -> POSY statement .)
    USECOLOR        reduce using rule 47 (posy_statement -> POSY statement .)
    DOWN            reduce using rule 47 (posy_statement -> POSY statement .)
    UP              reduce using rule 47 (posy_statement -> POSY statement .)
    BEGINNING       reduce using rule 47 (posy_statement -> POSY statement .)
    FOR             reduce using rule 47 (posy_statement -> POSY statement .)
    CASE            reduce using rule 47 (posy_statement -> POSY statement .)
    REPEAT          reduce using rule 47 (posy_statement -> POSY statement .)
    WHILE           reduce using rule 47 (posy_statement -> POSY statement .)
    $end            reduce using rule 47 (posy_statement -> POSY statement .)
    RPAREN          reduce using rule 47 (posy_statement -> POSY statement .)
    COMMA           reduce using rule 47 (posy_statement -> POSY statement .)
    RBRACKET        reduce using rule 47 (posy_statement -> POSY statement .)


state 97

    (48) usecolor_statement -> USECOLOR statement .

    SEMI            reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    EQUAL           reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    AND             reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    OR              reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    GREATER         reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    SMALLER         reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    SUBSTR          reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    RANDOM          reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    MULT            reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    DIV             reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    SUM             reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    LPAREN          reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    BOOLEAN         reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    NUMBER          reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    ID              reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    PROC            reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    CALL            reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    DEF             reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    PUT             reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    ADD             reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    CONTINUEUP      reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    CONTINUEDOWN    reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    CONTINUERIGHT   reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    CONTINUELEFT    reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    TURNRIGHT       reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    TURNLEFT        reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    POS             reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    POSX            reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    POSY            reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    USECOLOR        reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    DOWN            reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    UP              reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    BEGINNING       reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    FOR             reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    CASE            reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    REPEAT          reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    WHILE           reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    $end            reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    RPAREN          reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    COMMA           reduce using rule 48 (usecolor_statement -> USECOLOR statement .)
    RBRACKET        reduce using rule 48 (usecolor_statement -> USECOLOR statement .)


state 98

    (70) for_statement -> FOR ID . LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP

    LPAREN          shift and go to state 128


state 99

    (72) case_statement -> CASE ID . when_clauses END CASE
    (73) case_statement -> CASE ID . when_clauses ELSE LBRACKET program RBRACKET END CASE
    (74) when_clauses -> . when_clause
    (75) when_clauses -> . when_clauses when_clause
    (76) when_clause -> . WHEN expression THEN LBRACKET program RBRACKET

    WHEN            shift and go to state 131

    when_clauses                   shift and go to state 129
    when_clause                    shift and go to state 130

state 100

    (77) repeat_statement -> REPEAT LBRACKET . program RBRACKET UNTIL LBRACKET statement RBRACKET
    (1) program -> . statement SEMI
    (2) program -> . statement
    (3) program -> . program statement SEMI
    (4) program -> . program statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    program                        shift and go to state 132
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 101

    (78) while_statement -> WHILE LBRACKET . statement RBRACKET LBRACKET program RBRACKET WHEND
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 133
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 102

    (3) program -> program statement SEMI .

    EQUAL           reduce using rule 3 (program -> program statement SEMI .)
    AND             reduce using rule 3 (program -> program statement SEMI .)
    OR              reduce using rule 3 (program -> program statement SEMI .)
    GREATER         reduce using rule 3 (program -> program statement SEMI .)
    SMALLER         reduce using rule 3 (program -> program statement SEMI .)
    SUBSTR          reduce using rule 3 (program -> program statement SEMI .)
    RANDOM          reduce using rule 3 (program -> program statement SEMI .)
    MULT            reduce using rule 3 (program -> program statement SEMI .)
    DIV             reduce using rule 3 (program -> program statement SEMI .)
    SUM             reduce using rule 3 (program -> program statement SEMI .)
    LPAREN          reduce using rule 3 (program -> program statement SEMI .)
    BOOLEAN         reduce using rule 3 (program -> program statement SEMI .)
    NUMBER          reduce using rule 3 (program -> program statement SEMI .)
    ID              reduce using rule 3 (program -> program statement SEMI .)
    PROC            reduce using rule 3 (program -> program statement SEMI .)
    CALL            reduce using rule 3 (program -> program statement SEMI .)
    DEF             reduce using rule 3 (program -> program statement SEMI .)
    PUT             reduce using rule 3 (program -> program statement SEMI .)
    ADD             reduce using rule 3 (program -> program statement SEMI .)
    CONTINUEUP      reduce using rule 3 (program -> program statement SEMI .)
    CONTINUEDOWN    reduce using rule 3 (program -> program statement SEMI .)
    CONTINUERIGHT   reduce using rule 3 (program -> program statement SEMI .)
    CONTINUELEFT    reduce using rule 3 (program -> program statement SEMI .)
    TURNRIGHT       reduce using rule 3 (program -> program statement SEMI .)
    TURNLEFT        reduce using rule 3 (program -> program statement SEMI .)
    POS             reduce using rule 3 (program -> program statement SEMI .)
    POSX            reduce using rule 3 (program -> program statement SEMI .)
    POSY            reduce using rule 3 (program -> program statement SEMI .)
    USECOLOR        reduce using rule 3 (program -> program statement SEMI .)
    DOWN            reduce using rule 3 (program -> program statement SEMI .)
    UP              reduce using rule 3 (program -> program statement SEMI .)
    BEGINNING       reduce using rule 3 (program -> program statement SEMI .)
    FOR             reduce using rule 3 (program -> program statement SEMI .)
    CASE            reduce using rule 3 (program -> program statement SEMI .)
    REPEAT          reduce using rule 3 (program -> program statement SEMI .)
    WHILE           reduce using rule 3 (program -> program statement SEMI .)
    $end            reduce using rule 3 (program -> program statement SEMI .)
    RBRACKET        reduce using rule 3 (program -> program statement SEMI .)


state 103

    (28) expression -> expression PLUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    PLUS            reduce using rule 28 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 28 (expression -> expression PLUS expression .)
    LT              reduce using rule 28 (expression -> expression PLUS expression .)
    GT              reduce using rule 28 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 28 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 28 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 28 (expression -> expression PLUS expression .)
    AND             reduce using rule 28 (expression -> expression PLUS expression .)
    OR              reduce using rule 28 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 28 (expression -> expression PLUS expression .)
    SMALLER         reduce using rule 28 (expression -> expression PLUS expression .)
    SUBSTR          reduce using rule 28 (expression -> expression PLUS expression .)
    RANDOM          reduce using rule 28 (expression -> expression PLUS expression .)
    MULT            reduce using rule 28 (expression -> expression PLUS expression .)
    DIV             reduce using rule 28 (expression -> expression PLUS expression .)
    SUM             reduce using rule 28 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 28 (expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 28 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 28 (expression -> expression PLUS expression .)
    ID              reduce using rule 28 (expression -> expression PLUS expression .)
    PROC            reduce using rule 28 (expression -> expression PLUS expression .)
    CALL            reduce using rule 28 (expression -> expression PLUS expression .)
    DEF             reduce using rule 28 (expression -> expression PLUS expression .)
    PUT             reduce using rule 28 (expression -> expression PLUS expression .)
    ADD             reduce using rule 28 (expression -> expression PLUS expression .)
    CONTINUEUP      reduce using rule 28 (expression -> expression PLUS expression .)
    CONTINUEDOWN    reduce using rule 28 (expression -> expression PLUS expression .)
    CONTINUERIGHT   reduce using rule 28 (expression -> expression PLUS expression .)
    CONTINUELEFT    reduce using rule 28 (expression -> expression PLUS expression .)
    TURNRIGHT       reduce using rule 28 (expression -> expression PLUS expression .)
    TURNLEFT        reduce using rule 28 (expression -> expression PLUS expression .)
    POS             reduce using rule 28 (expression -> expression PLUS expression .)
    POSX            reduce using rule 28 (expression -> expression PLUS expression .)
    POSY            reduce using rule 28 (expression -> expression PLUS expression .)
    USECOLOR        reduce using rule 28 (expression -> expression PLUS expression .)
    DOWN            reduce using rule 28 (expression -> expression PLUS expression .)
    UP              reduce using rule 28 (expression -> expression PLUS expression .)
    BEGINNING       reduce using rule 28 (expression -> expression PLUS expression .)
    FOR             reduce using rule 28 (expression -> expression PLUS expression .)
    CASE            reduce using rule 28 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 28 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 28 (expression -> expression PLUS expression .)
    $end            reduce using rule 28 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 28 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 28 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 28 (expression -> expression PLUS expression .)
    TO              reduce using rule 28 (expression -> expression PLUS expression .)
    THEN            reduce using rule 28 (expression -> expression PLUS expression .)
    MULT_OP         shift and go to state 66
    DIV_OP          shift and go to state 67

  ! MULT_OP         [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! DIV_OP          [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]
  ! LT              [ shift and go to state 68 ]
  ! GT              [ shift and go to state 69 ]
  ! EQUALS          [ shift and go to state 70 ]


state 104

    (29) expression -> expression MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    PLUS            reduce using rule 29 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 29 (expression -> expression MINUS expression .)
    LT              reduce using rule 29 (expression -> expression MINUS expression .)
    GT              reduce using rule 29 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 29 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 29 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 29 (expression -> expression MINUS expression .)
    AND             reduce using rule 29 (expression -> expression MINUS expression .)
    OR              reduce using rule 29 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 29 (expression -> expression MINUS expression .)
    SMALLER         reduce using rule 29 (expression -> expression MINUS expression .)
    SUBSTR          reduce using rule 29 (expression -> expression MINUS expression .)
    RANDOM          reduce using rule 29 (expression -> expression MINUS expression .)
    MULT            reduce using rule 29 (expression -> expression MINUS expression .)
    DIV             reduce using rule 29 (expression -> expression MINUS expression .)
    SUM             reduce using rule 29 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 29 (expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 29 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 29 (expression -> expression MINUS expression .)
    ID              reduce using rule 29 (expression -> expression MINUS expression .)
    PROC            reduce using rule 29 (expression -> expression MINUS expression .)
    CALL            reduce using rule 29 (expression -> expression MINUS expression .)
    DEF             reduce using rule 29 (expression -> expression MINUS expression .)
    PUT             reduce using rule 29 (expression -> expression MINUS expression .)
    ADD             reduce using rule 29 (expression -> expression MINUS expression .)
    CONTINUEUP      reduce using rule 29 (expression -> expression MINUS expression .)
    CONTINUEDOWN    reduce using rule 29 (expression -> expression MINUS expression .)
    CONTINUERIGHT   reduce using rule 29 (expression -> expression MINUS expression .)
    CONTINUELEFT    reduce using rule 29 (expression -> expression MINUS expression .)
    TURNRIGHT       reduce using rule 29 (expression -> expression MINUS expression .)
    TURNLEFT        reduce using rule 29 (expression -> expression MINUS expression .)
    POS             reduce using rule 29 (expression -> expression MINUS expression .)
    POSX            reduce using rule 29 (expression -> expression MINUS expression .)
    POSY            reduce using rule 29 (expression -> expression MINUS expression .)
    USECOLOR        reduce using rule 29 (expression -> expression MINUS expression .)
    DOWN            reduce using rule 29 (expression -> expression MINUS expression .)
    UP              reduce using rule 29 (expression -> expression MINUS expression .)
    BEGINNING       reduce using rule 29 (expression -> expression MINUS expression .)
    FOR             reduce using rule 29 (expression -> expression MINUS expression .)
    CASE            reduce using rule 29 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 29 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 29 (expression -> expression MINUS expression .)
    $end            reduce using rule 29 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 29 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 29 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 29 (expression -> expression MINUS expression .)
    TO              reduce using rule 29 (expression -> expression MINUS expression .)
    THEN            reduce using rule 29 (expression -> expression MINUS expression .)
    MULT_OP         shift and go to state 66
    DIV_OP          shift and go to state 67

  ! MULT_OP         [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! DIV_OP          [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]
  ! LT              [ shift and go to state 68 ]
  ! GT              [ shift and go to state 69 ]
  ! EQUALS          [ shift and go to state 70 ]


state 105

    (30) expression -> expression MULT_OP expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    PLUS            reduce using rule 30 (expression -> expression MULT_OP expression .)
    MINUS           reduce using rule 30 (expression -> expression MULT_OP expression .)
    MULT_OP         reduce using rule 30 (expression -> expression MULT_OP expression .)
    DIV_OP          reduce using rule 30 (expression -> expression MULT_OP expression .)
    LT              reduce using rule 30 (expression -> expression MULT_OP expression .)
    GT              reduce using rule 30 (expression -> expression MULT_OP expression .)
    EQUALS          reduce using rule 30 (expression -> expression MULT_OP expression .)
    SEMI            reduce using rule 30 (expression -> expression MULT_OP expression .)
    EQUAL           reduce using rule 30 (expression -> expression MULT_OP expression .)
    AND             reduce using rule 30 (expression -> expression MULT_OP expression .)
    OR              reduce using rule 30 (expression -> expression MULT_OP expression .)
    GREATER         reduce using rule 30 (expression -> expression MULT_OP expression .)
    SMALLER         reduce using rule 30 (expression -> expression MULT_OP expression .)
    SUBSTR          reduce using rule 30 (expression -> expression MULT_OP expression .)
    RANDOM          reduce using rule 30 (expression -> expression MULT_OP expression .)
    MULT            reduce using rule 30 (expression -> expression MULT_OP expression .)
    DIV             reduce using rule 30 (expression -> expression MULT_OP expression .)
    SUM             reduce using rule 30 (expression -> expression MULT_OP expression .)
    LPAREN          reduce using rule 30 (expression -> expression MULT_OP expression .)
    BOOLEAN         reduce using rule 30 (expression -> expression MULT_OP expression .)
    NUMBER          reduce using rule 30 (expression -> expression MULT_OP expression .)
    ID              reduce using rule 30 (expression -> expression MULT_OP expression .)
    PROC            reduce using rule 30 (expression -> expression MULT_OP expression .)
    CALL            reduce using rule 30 (expression -> expression MULT_OP expression .)
    DEF             reduce using rule 30 (expression -> expression MULT_OP expression .)
    PUT             reduce using rule 30 (expression -> expression MULT_OP expression .)
    ADD             reduce using rule 30 (expression -> expression MULT_OP expression .)
    CONTINUEUP      reduce using rule 30 (expression -> expression MULT_OP expression .)
    CONTINUEDOWN    reduce using rule 30 (expression -> expression MULT_OP expression .)
    CONTINUERIGHT   reduce using rule 30 (expression -> expression MULT_OP expression .)
    CONTINUELEFT    reduce using rule 30 (expression -> expression MULT_OP expression .)
    TURNRIGHT       reduce using rule 30 (expression -> expression MULT_OP expression .)
    TURNLEFT        reduce using rule 30 (expression -> expression MULT_OP expression .)
    POS             reduce using rule 30 (expression -> expression MULT_OP expression .)
    POSX            reduce using rule 30 (expression -> expression MULT_OP expression .)
    POSY            reduce using rule 30 (expression -> expression MULT_OP expression .)
    USECOLOR        reduce using rule 30 (expression -> expression MULT_OP expression .)
    DOWN            reduce using rule 30 (expression -> expression MULT_OP expression .)
    UP              reduce using rule 30 (expression -> expression MULT_OP expression .)
    BEGINNING       reduce using rule 30 (expression -> expression MULT_OP expression .)
    FOR             reduce using rule 30 (expression -> expression MULT_OP expression .)
    CASE            reduce using rule 30 (expression -> expression MULT_OP expression .)
    REPEAT          reduce using rule 30 (expression -> expression MULT_OP expression .)
    WHILE           reduce using rule 30 (expression -> expression MULT_OP expression .)
    $end            reduce using rule 30 (expression -> expression MULT_OP expression .)
    RPAREN          reduce using rule 30 (expression -> expression MULT_OP expression .)
    COMMA           reduce using rule 30 (expression -> expression MULT_OP expression .)
    RBRACKET        reduce using rule 30 (expression -> expression MULT_OP expression .)
    TO              reduce using rule 30 (expression -> expression MULT_OP expression .)
    THEN            reduce using rule 30 (expression -> expression MULT_OP expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]
  ! MULT_OP         [ shift and go to state 66 ]
  ! DIV_OP          [ shift and go to state 67 ]
  ! LT              [ shift and go to state 68 ]
  ! GT              [ shift and go to state 69 ]
  ! EQUALS          [ shift and go to state 70 ]


state 106

    (31) expression -> expression DIV_OP expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    PLUS            reduce using rule 31 (expression -> expression DIV_OP expression .)
    MINUS           reduce using rule 31 (expression -> expression DIV_OP expression .)
    MULT_OP         reduce using rule 31 (expression -> expression DIV_OP expression .)
    DIV_OP          reduce using rule 31 (expression -> expression DIV_OP expression .)
    LT              reduce using rule 31 (expression -> expression DIV_OP expression .)
    GT              reduce using rule 31 (expression -> expression DIV_OP expression .)
    EQUALS          reduce using rule 31 (expression -> expression DIV_OP expression .)
    SEMI            reduce using rule 31 (expression -> expression DIV_OP expression .)
    EQUAL           reduce using rule 31 (expression -> expression DIV_OP expression .)
    AND             reduce using rule 31 (expression -> expression DIV_OP expression .)
    OR              reduce using rule 31 (expression -> expression DIV_OP expression .)
    GREATER         reduce using rule 31 (expression -> expression DIV_OP expression .)
    SMALLER         reduce using rule 31 (expression -> expression DIV_OP expression .)
    SUBSTR          reduce using rule 31 (expression -> expression DIV_OP expression .)
    RANDOM          reduce using rule 31 (expression -> expression DIV_OP expression .)
    MULT            reduce using rule 31 (expression -> expression DIV_OP expression .)
    DIV             reduce using rule 31 (expression -> expression DIV_OP expression .)
    SUM             reduce using rule 31 (expression -> expression DIV_OP expression .)
    LPAREN          reduce using rule 31 (expression -> expression DIV_OP expression .)
    BOOLEAN         reduce using rule 31 (expression -> expression DIV_OP expression .)
    NUMBER          reduce using rule 31 (expression -> expression DIV_OP expression .)
    ID              reduce using rule 31 (expression -> expression DIV_OP expression .)
    PROC            reduce using rule 31 (expression -> expression DIV_OP expression .)
    CALL            reduce using rule 31 (expression -> expression DIV_OP expression .)
    DEF             reduce using rule 31 (expression -> expression DIV_OP expression .)
    PUT             reduce using rule 31 (expression -> expression DIV_OP expression .)
    ADD             reduce using rule 31 (expression -> expression DIV_OP expression .)
    CONTINUEUP      reduce using rule 31 (expression -> expression DIV_OP expression .)
    CONTINUEDOWN    reduce using rule 31 (expression -> expression DIV_OP expression .)
    CONTINUERIGHT   reduce using rule 31 (expression -> expression DIV_OP expression .)
    CONTINUELEFT    reduce using rule 31 (expression -> expression DIV_OP expression .)
    TURNRIGHT       reduce using rule 31 (expression -> expression DIV_OP expression .)
    TURNLEFT        reduce using rule 31 (expression -> expression DIV_OP expression .)
    POS             reduce using rule 31 (expression -> expression DIV_OP expression .)
    POSX            reduce using rule 31 (expression -> expression DIV_OP expression .)
    POSY            reduce using rule 31 (expression -> expression DIV_OP expression .)
    USECOLOR        reduce using rule 31 (expression -> expression DIV_OP expression .)
    DOWN            reduce using rule 31 (expression -> expression DIV_OP expression .)
    UP              reduce using rule 31 (expression -> expression DIV_OP expression .)
    BEGINNING       reduce using rule 31 (expression -> expression DIV_OP expression .)
    FOR             reduce using rule 31 (expression -> expression DIV_OP expression .)
    CASE            reduce using rule 31 (expression -> expression DIV_OP expression .)
    REPEAT          reduce using rule 31 (expression -> expression DIV_OP expression .)
    WHILE           reduce using rule 31 (expression -> expression DIV_OP expression .)
    $end            reduce using rule 31 (expression -> expression DIV_OP expression .)
    RPAREN          reduce using rule 31 (expression -> expression DIV_OP expression .)
    COMMA           reduce using rule 31 (expression -> expression DIV_OP expression .)
    RBRACKET        reduce using rule 31 (expression -> expression DIV_OP expression .)
    TO              reduce using rule 31 (expression -> expression DIV_OP expression .)
    THEN            reduce using rule 31 (expression -> expression DIV_OP expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]
  ! MULT_OP         [ shift and go to state 66 ]
  ! DIV_OP          [ shift and go to state 67 ]
  ! LT              [ shift and go to state 68 ]
  ! GT              [ shift and go to state 69 ]
  ! EQUALS          [ shift and go to state 70 ]


state 107

    (32) expression -> expression LT expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    LT              reduce using rule 32 (expression -> expression LT expression .)
    GT              reduce using rule 32 (expression -> expression LT expression .)
    EQUALS          reduce using rule 32 (expression -> expression LT expression .)
    SEMI            reduce using rule 32 (expression -> expression LT expression .)
    EQUAL           reduce using rule 32 (expression -> expression LT expression .)
    AND             reduce using rule 32 (expression -> expression LT expression .)
    OR              reduce using rule 32 (expression -> expression LT expression .)
    GREATER         reduce using rule 32 (expression -> expression LT expression .)
    SMALLER         reduce using rule 32 (expression -> expression LT expression .)
    SUBSTR          reduce using rule 32 (expression -> expression LT expression .)
    RANDOM          reduce using rule 32 (expression -> expression LT expression .)
    MULT            reduce using rule 32 (expression -> expression LT expression .)
    DIV             reduce using rule 32 (expression -> expression LT expression .)
    SUM             reduce using rule 32 (expression -> expression LT expression .)
    LPAREN          reduce using rule 32 (expression -> expression LT expression .)
    BOOLEAN         reduce using rule 32 (expression -> expression LT expression .)
    NUMBER          reduce using rule 32 (expression -> expression LT expression .)
    ID              reduce using rule 32 (expression -> expression LT expression .)
    PROC            reduce using rule 32 (expression -> expression LT expression .)
    CALL            reduce using rule 32 (expression -> expression LT expression .)
    DEF             reduce using rule 32 (expression -> expression LT expression .)
    PUT             reduce using rule 32 (expression -> expression LT expression .)
    ADD             reduce using rule 32 (expression -> expression LT expression .)
    CONTINUEUP      reduce using rule 32 (expression -> expression LT expression .)
    CONTINUEDOWN    reduce using rule 32 (expression -> expression LT expression .)
    CONTINUERIGHT   reduce using rule 32 (expression -> expression LT expression .)
    CONTINUELEFT    reduce using rule 32 (expression -> expression LT expression .)
    TURNRIGHT       reduce using rule 32 (expression -> expression LT expression .)
    TURNLEFT        reduce using rule 32 (expression -> expression LT expression .)
    POS             reduce using rule 32 (expression -> expression LT expression .)
    POSX            reduce using rule 32 (expression -> expression LT expression .)
    POSY            reduce using rule 32 (expression -> expression LT expression .)
    USECOLOR        reduce using rule 32 (expression -> expression LT expression .)
    DOWN            reduce using rule 32 (expression -> expression LT expression .)
    UP              reduce using rule 32 (expression -> expression LT expression .)
    BEGINNING       reduce using rule 32 (expression -> expression LT expression .)
    FOR             reduce using rule 32 (expression -> expression LT expression .)
    CASE            reduce using rule 32 (expression -> expression LT expression .)
    REPEAT          reduce using rule 32 (expression -> expression LT expression .)
    WHILE           reduce using rule 32 (expression -> expression LT expression .)
    $end            reduce using rule 32 (expression -> expression LT expression .)
    RPAREN          reduce using rule 32 (expression -> expression LT expression .)
    COMMA           reduce using rule 32 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 32 (expression -> expression LT expression .)
    TO              reduce using rule 32 (expression -> expression LT expression .)
    THEN            reduce using rule 32 (expression -> expression LT expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    MULT_OP         shift and go to state 66
    DIV_OP          shift and go to state 67

  ! PLUS            [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! MULT_OP         [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! DIV_OP          [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 68 ]
  ! GT              [ shift and go to state 69 ]
  ! EQUALS          [ shift and go to state 70 ]


state 108

    (33) expression -> expression GT expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    LT              reduce using rule 33 (expression -> expression GT expression .)
    GT              reduce using rule 33 (expression -> expression GT expression .)
    EQUALS          reduce using rule 33 (expression -> expression GT expression .)
    SEMI            reduce using rule 33 (expression -> expression GT expression .)
    EQUAL           reduce using rule 33 (expression -> expression GT expression .)
    AND             reduce using rule 33 (expression -> expression GT expression .)
    OR              reduce using rule 33 (expression -> expression GT expression .)
    GREATER         reduce using rule 33 (expression -> expression GT expression .)
    SMALLER         reduce using rule 33 (expression -> expression GT expression .)
    SUBSTR          reduce using rule 33 (expression -> expression GT expression .)
    RANDOM          reduce using rule 33 (expression -> expression GT expression .)
    MULT            reduce using rule 33 (expression -> expression GT expression .)
    DIV             reduce using rule 33 (expression -> expression GT expression .)
    SUM             reduce using rule 33 (expression -> expression GT expression .)
    LPAREN          reduce using rule 33 (expression -> expression GT expression .)
    BOOLEAN         reduce using rule 33 (expression -> expression GT expression .)
    NUMBER          reduce using rule 33 (expression -> expression GT expression .)
    ID              reduce using rule 33 (expression -> expression GT expression .)
    PROC            reduce using rule 33 (expression -> expression GT expression .)
    CALL            reduce using rule 33 (expression -> expression GT expression .)
    DEF             reduce using rule 33 (expression -> expression GT expression .)
    PUT             reduce using rule 33 (expression -> expression GT expression .)
    ADD             reduce using rule 33 (expression -> expression GT expression .)
    CONTINUEUP      reduce using rule 33 (expression -> expression GT expression .)
    CONTINUEDOWN    reduce using rule 33 (expression -> expression GT expression .)
    CONTINUERIGHT   reduce using rule 33 (expression -> expression GT expression .)
    CONTINUELEFT    reduce using rule 33 (expression -> expression GT expression .)
    TURNRIGHT       reduce using rule 33 (expression -> expression GT expression .)
    TURNLEFT        reduce using rule 33 (expression -> expression GT expression .)
    POS             reduce using rule 33 (expression -> expression GT expression .)
    POSX            reduce using rule 33 (expression -> expression GT expression .)
    POSY            reduce using rule 33 (expression -> expression GT expression .)
    USECOLOR        reduce using rule 33 (expression -> expression GT expression .)
    DOWN            reduce using rule 33 (expression -> expression GT expression .)
    UP              reduce using rule 33 (expression -> expression GT expression .)
    BEGINNING       reduce using rule 33 (expression -> expression GT expression .)
    FOR             reduce using rule 33 (expression -> expression GT expression .)
    CASE            reduce using rule 33 (expression -> expression GT expression .)
    REPEAT          reduce using rule 33 (expression -> expression GT expression .)
    WHILE           reduce using rule 33 (expression -> expression GT expression .)
    $end            reduce using rule 33 (expression -> expression GT expression .)
    RPAREN          reduce using rule 33 (expression -> expression GT expression .)
    COMMA           reduce using rule 33 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 33 (expression -> expression GT expression .)
    TO              reduce using rule 33 (expression -> expression GT expression .)
    THEN            reduce using rule 33 (expression -> expression GT expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    MULT_OP         shift and go to state 66
    DIV_OP          shift and go to state 67

  ! PLUS            [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! MULT_OP         [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! DIV_OP          [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 68 ]
  ! GT              [ shift and go to state 69 ]
  ! EQUALS          [ shift and go to state 70 ]


state 109

    (34) expression -> expression EQUALS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    LT              reduce using rule 34 (expression -> expression EQUALS expression .)
    GT              reduce using rule 34 (expression -> expression EQUALS expression .)
    EQUALS          reduce using rule 34 (expression -> expression EQUALS expression .)
    SEMI            reduce using rule 34 (expression -> expression EQUALS expression .)
    EQUAL           reduce using rule 34 (expression -> expression EQUALS expression .)
    AND             reduce using rule 34 (expression -> expression EQUALS expression .)
    OR              reduce using rule 34 (expression -> expression EQUALS expression .)
    GREATER         reduce using rule 34 (expression -> expression EQUALS expression .)
    SMALLER         reduce using rule 34 (expression -> expression EQUALS expression .)
    SUBSTR          reduce using rule 34 (expression -> expression EQUALS expression .)
    RANDOM          reduce using rule 34 (expression -> expression EQUALS expression .)
    MULT            reduce using rule 34 (expression -> expression EQUALS expression .)
    DIV             reduce using rule 34 (expression -> expression EQUALS expression .)
    SUM             reduce using rule 34 (expression -> expression EQUALS expression .)
    LPAREN          reduce using rule 34 (expression -> expression EQUALS expression .)
    BOOLEAN         reduce using rule 34 (expression -> expression EQUALS expression .)
    NUMBER          reduce using rule 34 (expression -> expression EQUALS expression .)
    ID              reduce using rule 34 (expression -> expression EQUALS expression .)
    PROC            reduce using rule 34 (expression -> expression EQUALS expression .)
    CALL            reduce using rule 34 (expression -> expression EQUALS expression .)
    DEF             reduce using rule 34 (expression -> expression EQUALS expression .)
    PUT             reduce using rule 34 (expression -> expression EQUALS expression .)
    ADD             reduce using rule 34 (expression -> expression EQUALS expression .)
    CONTINUEUP      reduce using rule 34 (expression -> expression EQUALS expression .)
    CONTINUEDOWN    reduce using rule 34 (expression -> expression EQUALS expression .)
    CONTINUERIGHT   reduce using rule 34 (expression -> expression EQUALS expression .)
    CONTINUELEFT    reduce using rule 34 (expression -> expression EQUALS expression .)
    TURNRIGHT       reduce using rule 34 (expression -> expression EQUALS expression .)
    TURNLEFT        reduce using rule 34 (expression -> expression EQUALS expression .)
    POS             reduce using rule 34 (expression -> expression EQUALS expression .)
    POSX            reduce using rule 34 (expression -> expression EQUALS expression .)
    POSY            reduce using rule 34 (expression -> expression EQUALS expression .)
    USECOLOR        reduce using rule 34 (expression -> expression EQUALS expression .)
    DOWN            reduce using rule 34 (expression -> expression EQUALS expression .)
    UP              reduce using rule 34 (expression -> expression EQUALS expression .)
    BEGINNING       reduce using rule 34 (expression -> expression EQUALS expression .)
    FOR             reduce using rule 34 (expression -> expression EQUALS expression .)
    CASE            reduce using rule 34 (expression -> expression EQUALS expression .)
    REPEAT          reduce using rule 34 (expression -> expression EQUALS expression .)
    WHILE           reduce using rule 34 (expression -> expression EQUALS expression .)
    $end            reduce using rule 34 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 34 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 34 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 34 (expression -> expression EQUALS expression .)
    TO              reduce using rule 34 (expression -> expression EQUALS expression .)
    THEN            reduce using rule 34 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    MULT_OP         shift and go to state 66
    DIV_OP          shift and go to state 67

  ! PLUS            [ reduce using rule 34 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression EQUALS expression .) ]
  ! MULT_OP         [ reduce using rule 34 (expression -> expression EQUALS expression .) ]
  ! DIV_OP          [ reduce using rule 34 (expression -> expression EQUALS expression .) ]
  ! LT              [ shift and go to state 68 ]
  ! GT              [ shift and go to state 69 ]
  ! EQUALS          [ shift and go to state 70 ]


state 110

    (52) expression -> EQUAL LPAREN statement . COMMA statement RPAREN

    COMMA           shift and go to state 134


state 111

    (62) expression -> LPAREN expression_list RPAREN .

    PLUS            reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    MULT_OP         reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    DIV_OP          reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    LT              reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    GT              reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    SEMI            reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    EQUAL           reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    AND             reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    OR              reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    GREATER         reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    SMALLER         reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    SUBSTR          reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    RANDOM          reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    MULT            reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    DIV             reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    SUM             reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    LPAREN          reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    BOOLEAN         reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    NUMBER          reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    ID              reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    PROC            reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    CALL            reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    DEF             reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    PUT             reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    ADD             reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    CONTINUEUP      reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    CONTINUEDOWN    reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    CONTINUERIGHT   reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    CONTINUELEFT    reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    TURNRIGHT       reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    TURNLEFT        reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    POS             reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    POSX            reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    POSY            reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    USECOLOR        reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    DOWN            reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    UP              reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    BEGINNING       reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    FOR             reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    CASE            reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    REPEAT          reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    WHILE           reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    $end            reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    TO              reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)
    THEN            reduce using rule 62 (expression -> LPAREN expression_list RPAREN .)


state 112

    (67) expression_list -> expression_list statement .

    RPAREN          reduce using rule 67 (expression_list -> expression_list statement .)
    EQUAL           reduce using rule 67 (expression_list -> expression_list statement .)
    AND             reduce using rule 67 (expression_list -> expression_list statement .)
    OR              reduce using rule 67 (expression_list -> expression_list statement .)
    GREATER         reduce using rule 67 (expression_list -> expression_list statement .)
    SMALLER         reduce using rule 67 (expression_list -> expression_list statement .)
    SUBSTR          reduce using rule 67 (expression_list -> expression_list statement .)
    RANDOM          reduce using rule 67 (expression_list -> expression_list statement .)
    MULT            reduce using rule 67 (expression_list -> expression_list statement .)
    DIV             reduce using rule 67 (expression_list -> expression_list statement .)
    SUM             reduce using rule 67 (expression_list -> expression_list statement .)
    LPAREN          reduce using rule 67 (expression_list -> expression_list statement .)
    BOOLEAN         reduce using rule 67 (expression_list -> expression_list statement .)
    NUMBER          reduce using rule 67 (expression_list -> expression_list statement .)
    ID              reduce using rule 67 (expression_list -> expression_list statement .)
    PROC            reduce using rule 67 (expression_list -> expression_list statement .)
    CALL            reduce using rule 67 (expression_list -> expression_list statement .)
    DEF             reduce using rule 67 (expression_list -> expression_list statement .)
    PUT             reduce using rule 67 (expression_list -> expression_list statement .)
    ADD             reduce using rule 67 (expression_list -> expression_list statement .)
    CONTINUEUP      reduce using rule 67 (expression_list -> expression_list statement .)
    CONTINUEDOWN    reduce using rule 67 (expression_list -> expression_list statement .)
    CONTINUERIGHT   reduce using rule 67 (expression_list -> expression_list statement .)
    CONTINUELEFT    reduce using rule 67 (expression_list -> expression_list statement .)
    TURNRIGHT       reduce using rule 67 (expression_list -> expression_list statement .)
    TURNLEFT        reduce using rule 67 (expression_list -> expression_list statement .)
    POS             reduce using rule 67 (expression_list -> expression_list statement .)
    POSX            reduce using rule 67 (expression_list -> expression_list statement .)
    POSY            reduce using rule 67 (expression_list -> expression_list statement .)
    USECOLOR        reduce using rule 67 (expression_list -> expression_list statement .)
    DOWN            reduce using rule 67 (expression_list -> expression_list statement .)
    UP              reduce using rule 67 (expression_list -> expression_list statement .)
    BEGINNING       reduce using rule 67 (expression_list -> expression_list statement .)
    FOR             reduce using rule 67 (expression_list -> expression_list statement .)
    CASE            reduce using rule 67 (expression_list -> expression_list statement .)
    REPEAT          reduce using rule 67 (expression_list -> expression_list statement .)
    WHILE           reduce using rule 67 (expression_list -> expression_list statement .)


state 113

    (53) expression -> AND LPAREN statement . COMMA statement RPAREN

    COMMA           shift and go to state 135


state 114

    (54) expression -> OR LPAREN statement . COMMA statement RPAREN

    COMMA           shift and go to state 136


state 115

    (55) expression -> GREATER LPAREN statement . COMMA statement RPAREN

    COMMA           shift and go to state 137


state 116

    (56) expression -> SMALLER LPAREN statement . COMMA statement RPAREN

    COMMA           shift and go to state 138


state 117

    (57) expression -> SUBSTR LPAREN statement . COMMA statement RPAREN

    COMMA           shift and go to state 139


state 118

    (58) expression -> RANDOM LPAREN statement . RPAREN

    RPAREN          shift and go to state 140


state 119

    (59) expression -> MULT LPAREN statement . COMMA statement RPAREN

    COMMA           shift and go to state 141


state 120

    (60) expression -> DIV LPAREN statement . COMMA statement RPAREN

    COMMA           shift and go to state 142


state 121

    (61) expression -> SUM LPAREN statement . COMMA statement RPAREN

    COMMA           shift and go to state 143


state 122

    (79) procedure_statement -> PROC ID LPAREN . parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (81) parameter_list -> . expression
    (82) parameter_list -> . parameter_list COMMA expression
    (83) parameter_list -> .
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    RPAREN          reduce using rule 83 (parameter_list -> .)
    COMMA           reduce using rule 83 (parameter_list -> .)
    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    parameter_list                 shift and go to state 144
    expression                     shift and go to state 145

state 123

    (80) call_statement -> CALL ID LPAREN . parameter_list RPAREN
    (81) parameter_list -> . expression
    (82) parameter_list -> . parameter_list COMMA expression
    (83) parameter_list -> .
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    RPAREN          reduce using rule 83 (parameter_list -> .)
    COMMA           reduce using rule 83 (parameter_list -> .)
    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    parameter_list                 shift and go to state 146
    expression                     shift and go to state 145

state 124

    (35) def_statement -> DEF LPAREN ID . COMMA statement RPAREN

    COMMA           shift and go to state 147


state 125

    (36) put_statement -> PUT LPAREN ID . COMMA statement RPAREN

    COMMA           shift and go to state 148


state 126

    (37) add_statement -> ADD LPAREN ID . RPAREN
    (38) add_statement -> ADD LPAREN ID . COMMA statement RPAREN

    RPAREN          shift and go to state 149
    COMMA           shift and go to state 150


state 127

    (45) pos_statement -> POS LPAREN statement . COMMA statement RPAREN

    COMMA           shift and go to state 151


state 128

    (70) for_statement -> FOR ID LPAREN . expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 152

state 129

    (72) case_statement -> CASE ID when_clauses . END CASE
    (73) case_statement -> CASE ID when_clauses . ELSE LBRACKET program RBRACKET END CASE
    (75) when_clauses -> when_clauses . when_clause
    (76) when_clause -> . WHEN expression THEN LBRACKET program RBRACKET

    END             shift and go to state 153
    ELSE            shift and go to state 154
    WHEN            shift and go to state 131

    when_clause                    shift and go to state 155

state 130

    (74) when_clauses -> when_clause .

    END             reduce using rule 74 (when_clauses -> when_clause .)
    ELSE            reduce using rule 74 (when_clauses -> when_clause .)
    WHEN            reduce using rule 74 (when_clauses -> when_clause .)


state 131

    (76) when_clause -> WHEN . expression THEN LBRACKET program RBRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 156

state 132

    (77) repeat_statement -> REPEAT LBRACKET program . RBRACKET UNTIL LBRACKET statement RBRACKET
    (3) program -> program . statement SEMI
    (4) program -> program . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    RBRACKET        shift and go to state 157
    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 62
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 133

    (78) while_statement -> WHILE LBRACKET statement . RBRACKET LBRACKET program RBRACKET WHEND

    RBRACKET        shift and go to state 158


state 134

    (52) expression -> EQUAL LPAREN statement COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 159
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 135

    (53) expression -> AND LPAREN statement COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 160
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 136

    (54) expression -> OR LPAREN statement COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 161
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 137

    (55) expression -> GREATER LPAREN statement COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 162
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 138

    (56) expression -> SMALLER LPAREN statement COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 163
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 139

    (57) expression -> SUBSTR LPAREN statement COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 164
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 140

    (58) expression -> RANDOM LPAREN statement RPAREN .

    PLUS            reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    MINUS           reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    MULT_OP         reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    DIV_OP          reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    LT              reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    GT              reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    EQUALS          reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    SEMI            reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    EQUAL           reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    AND             reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    OR              reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    GREATER         reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    SMALLER         reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    SUBSTR          reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    RANDOM          reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    MULT            reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    DIV             reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    SUM             reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    LPAREN          reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    BOOLEAN         reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    NUMBER          reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    ID              reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    PROC            reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    CALL            reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    DEF             reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    PUT             reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    ADD             reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    CONTINUEUP      reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    CONTINUEDOWN    reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    CONTINUERIGHT   reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    CONTINUELEFT    reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    TURNRIGHT       reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    TURNLEFT        reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    POS             reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    POSX            reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    POSY            reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    USECOLOR        reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    DOWN            reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    UP              reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    BEGINNING       reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    FOR             reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    CASE            reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    REPEAT          reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    WHILE           reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    $end            reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    RPAREN          reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    COMMA           reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    RBRACKET        reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    TO              reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)
    THEN            reduce using rule 58 (expression -> RANDOM LPAREN statement RPAREN .)


state 141

    (59) expression -> MULT LPAREN statement COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 165
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 142

    (60) expression -> DIV LPAREN statement COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 166
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 143

    (61) expression -> SUM LPAREN statement COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 167
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 144

    (79) procedure_statement -> PROC ID LPAREN parameter_list . RPAREN LBRACKET program RBRACKET SEMI END
    (82) parameter_list -> parameter_list . COMMA expression

    RPAREN          shift and go to state 168
    COMMA           shift and go to state 169


state 145

    (81) parameter_list -> expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    RPAREN          reduce using rule 81 (parameter_list -> expression .)
    COMMA           reduce using rule 81 (parameter_list -> expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    MULT_OP         shift and go to state 66
    DIV_OP          shift and go to state 67
    LT              shift and go to state 68
    GT              shift and go to state 69
    EQUALS          shift and go to state 70


state 146

    (80) call_statement -> CALL ID LPAREN parameter_list . RPAREN
    (82) parameter_list -> parameter_list . COMMA expression

    RPAREN          shift and go to state 170
    COMMA           shift and go to state 169


state 147

    (35) def_statement -> DEF LPAREN ID COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 171
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 148

    (36) put_statement -> PUT LPAREN ID COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 172
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 149

    (37) add_statement -> ADD LPAREN ID RPAREN .

    SEMI            reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    EQUAL           reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    AND             reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    OR              reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    GREATER         reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    SMALLER         reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    SUBSTR          reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    RANDOM          reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    MULT            reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    DIV             reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    SUM             reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    LPAREN          reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    BOOLEAN         reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    NUMBER          reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    ID              reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    PROC            reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    CALL            reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    DEF             reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    PUT             reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    ADD             reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    CONTINUEUP      reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    CONTINUEDOWN    reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    CONTINUERIGHT   reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    CONTINUELEFT    reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    TURNRIGHT       reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    TURNLEFT        reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    POS             reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    POSX            reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    POSY            reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    USECOLOR        reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    DOWN            reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    UP              reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    BEGINNING       reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    FOR             reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    CASE            reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    REPEAT          reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    WHILE           reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    $end            reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    RPAREN          reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    COMMA           reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)
    RBRACKET        reduce using rule 37 (add_statement -> ADD LPAREN ID RPAREN .)


state 150

    (38) add_statement -> ADD LPAREN ID COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 173
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 151

    (45) pos_statement -> POS LPAREN statement COMMA . statement RPAREN
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 174
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 152

    (70) for_statement -> FOR ID LPAREN expression . TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    TO              shift and go to state 175
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    MULT_OP         shift and go to state 66
    DIV_OP          shift and go to state 67
    LT              shift and go to state 68
    GT              shift and go to state 69
    EQUALS          shift and go to state 70


state 153

    (72) case_statement -> CASE ID when_clauses END . CASE

    CASE            shift and go to state 176


state 154

    (73) case_statement -> CASE ID when_clauses ELSE . LBRACKET program RBRACKET END CASE

    LBRACKET        shift and go to state 177


state 155

    (75) when_clauses -> when_clauses when_clause .

    END             reduce using rule 75 (when_clauses -> when_clauses when_clause .)
    ELSE            reduce using rule 75 (when_clauses -> when_clauses when_clause .)
    WHEN            reduce using rule 75 (when_clauses -> when_clauses when_clause .)


state 156

    (76) when_clause -> WHEN expression . THEN LBRACKET program RBRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    THEN            shift and go to state 178
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    MULT_OP         shift and go to state 66
    DIV_OP          shift and go to state 67
    LT              shift and go to state 68
    GT              shift and go to state 69
    EQUALS          shift and go to state 70


state 157

    (77) repeat_statement -> REPEAT LBRACKET program RBRACKET . UNTIL LBRACKET statement RBRACKET

    UNTIL           shift and go to state 179


state 158

    (78) while_statement -> WHILE LBRACKET statement RBRACKET . LBRACKET program RBRACKET WHEND

    LBRACKET        shift and go to state 180


state 159

    (52) expression -> EQUAL LPAREN statement COMMA statement . RPAREN

    RPAREN          shift and go to state 181


state 160

    (53) expression -> AND LPAREN statement COMMA statement . RPAREN

    RPAREN          shift and go to state 182


state 161

    (54) expression -> OR LPAREN statement COMMA statement . RPAREN

    RPAREN          shift and go to state 183


state 162

    (55) expression -> GREATER LPAREN statement COMMA statement . RPAREN

    RPAREN          shift and go to state 184


state 163

    (56) expression -> SMALLER LPAREN statement COMMA statement . RPAREN

    RPAREN          shift and go to state 185


state 164

    (57) expression -> SUBSTR LPAREN statement COMMA statement . RPAREN

    RPAREN          shift and go to state 186


state 165

    (59) expression -> MULT LPAREN statement COMMA statement . RPAREN

    RPAREN          shift and go to state 187


state 166

    (60) expression -> DIV LPAREN statement COMMA statement . RPAREN

    RPAREN          shift and go to state 188


state 167

    (61) expression -> SUM LPAREN statement COMMA statement . RPAREN

    RPAREN          shift and go to state 189


state 168

    (79) procedure_statement -> PROC ID LPAREN parameter_list RPAREN . LBRACKET program RBRACKET SEMI END

    LBRACKET        shift and go to state 190


state 169

    (82) parameter_list -> parameter_list COMMA . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 191

state 170

    (80) call_statement -> CALL ID LPAREN parameter_list RPAREN .

    SEMI            reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    EQUAL           reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    AND             reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    OR              reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    GREATER         reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    SMALLER         reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    SUBSTR          reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    RANDOM          reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    MULT            reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    DIV             reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    SUM             reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    LPAREN          reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    BOOLEAN         reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    NUMBER          reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    ID              reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    PROC            reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    CALL            reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    DEF             reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    PUT             reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    ADD             reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    CONTINUEUP      reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    CONTINUEDOWN    reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    CONTINUERIGHT   reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    CONTINUELEFT    reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    TURNRIGHT       reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    TURNLEFT        reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    POS             reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    POSX            reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    POSY            reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    USECOLOR        reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    DOWN            reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    UP              reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    BEGINNING       reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    FOR             reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    CASE            reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    REPEAT          reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    WHILE           reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    $end            reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    RPAREN          reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    COMMA           reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)
    RBRACKET        reduce using rule 80 (call_statement -> CALL ID LPAREN parameter_list RPAREN .)


state 171

    (35) def_statement -> DEF LPAREN ID COMMA statement . RPAREN

    RPAREN          shift and go to state 192


state 172

    (36) put_statement -> PUT LPAREN ID COMMA statement . RPAREN

    RPAREN          shift and go to state 193


state 173

    (38) add_statement -> ADD LPAREN ID COMMA statement . RPAREN

    RPAREN          shift and go to state 194


state 174

    (45) pos_statement -> POS LPAREN statement COMMA statement . RPAREN

    RPAREN          shift and go to state 195


state 175

    (70) for_statement -> FOR ID LPAREN expression TO . expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 196

state 176

    (72) case_statement -> CASE ID when_clauses END CASE .

    SEMI            reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    EQUAL           reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    AND             reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    OR              reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    GREATER         reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    SMALLER         reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    SUBSTR          reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    RANDOM          reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    MULT            reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    DIV             reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    SUM             reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    LPAREN          reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    BOOLEAN         reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    NUMBER          reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    ID              reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    PROC            reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    CALL            reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    DEF             reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    PUT             reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    ADD             reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    CONTINUEUP      reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    CONTINUEDOWN    reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    CONTINUERIGHT   reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    CONTINUELEFT    reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    TURNRIGHT       reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    TURNLEFT        reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    POS             reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    POSX            reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    POSY            reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    USECOLOR        reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    DOWN            reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    UP              reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    BEGINNING       reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    FOR             reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    CASE            reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    REPEAT          reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    WHILE           reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    $end            reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    RPAREN          reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    COMMA           reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)
    RBRACKET        reduce using rule 72 (case_statement -> CASE ID when_clauses END CASE .)


state 177

    (73) case_statement -> CASE ID when_clauses ELSE LBRACKET . program RBRACKET END CASE
    (1) program -> . statement SEMI
    (2) program -> . statement
    (3) program -> . program statement SEMI
    (4) program -> . program statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    program                        shift and go to state 197
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 178

    (76) when_clause -> WHEN expression THEN . LBRACKET program RBRACKET

    LBRACKET        shift and go to state 198


state 179

    (77) repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL . LBRACKET statement RBRACKET

    LBRACKET        shift and go to state 199


state 180

    (78) while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET . program RBRACKET WHEND
    (1) program -> . statement SEMI
    (2) program -> . statement
    (3) program -> . program statement SEMI
    (4) program -> . program statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 2
    program                        shift and go to state 200
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 181

    (52) expression -> EQUAL LPAREN statement COMMA statement RPAREN .

    PLUS            reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    MINUS           reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    MULT_OP         reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    DIV_OP          reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    LT              reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    GT              reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    EQUALS          reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    SEMI            reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    EQUAL           reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    AND             reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    OR              reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    GREATER         reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    SMALLER         reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    SUBSTR          reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    RANDOM          reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    MULT            reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    DIV             reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    SUM             reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    LPAREN          reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    NUMBER          reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    ID              reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    PROC            reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    CALL            reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    DEF             reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    PUT             reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    ADD             reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    POS             reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    POSX            reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    POSY            reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    USECOLOR        reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    DOWN            reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    UP              reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    BEGINNING       reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    FOR             reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    CASE            reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    REPEAT          reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    WHILE           reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    $end            reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    RPAREN          reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    COMMA           reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    RBRACKET        reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    TO              reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)
    THEN            reduce using rule 52 (expression -> EQUAL LPAREN statement COMMA statement RPAREN .)


state 182

    (53) expression -> AND LPAREN statement COMMA statement RPAREN .

    PLUS            reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    MINUS           reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    MULT_OP         reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    DIV_OP          reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    LT              reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    GT              reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    EQUALS          reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    SEMI            reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    EQUAL           reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    AND             reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    OR              reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    GREATER         reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    SMALLER         reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    SUBSTR          reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    RANDOM          reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    MULT            reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    DIV             reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    SUM             reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    LPAREN          reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    NUMBER          reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    ID              reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    PROC            reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    CALL            reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    DEF             reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    PUT             reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    ADD             reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    POS             reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    POSX            reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    POSY            reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    USECOLOR        reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    DOWN            reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    UP              reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    BEGINNING       reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    FOR             reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    CASE            reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    REPEAT          reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    WHILE           reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    $end            reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    RPAREN          reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    COMMA           reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    RBRACKET        reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    TO              reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)
    THEN            reduce using rule 53 (expression -> AND LPAREN statement COMMA statement RPAREN .)


state 183

    (54) expression -> OR LPAREN statement COMMA statement RPAREN .

    PLUS            reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    MINUS           reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    MULT_OP         reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    DIV_OP          reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    LT              reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    GT              reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    EQUALS          reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    SEMI            reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    EQUAL           reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    AND             reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    OR              reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    GREATER         reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    SMALLER         reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    SUBSTR          reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    RANDOM          reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    MULT            reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    DIV             reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    SUM             reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    LPAREN          reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    NUMBER          reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    ID              reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    PROC            reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    CALL            reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    DEF             reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    PUT             reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    ADD             reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    POS             reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    POSX            reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    POSY            reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    USECOLOR        reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    DOWN            reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    UP              reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    BEGINNING       reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    FOR             reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    CASE            reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    REPEAT          reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    WHILE           reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    $end            reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    RPAREN          reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    COMMA           reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    RBRACKET        reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    TO              reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)
    THEN            reduce using rule 54 (expression -> OR LPAREN statement COMMA statement RPAREN .)


state 184

    (55) expression -> GREATER LPAREN statement COMMA statement RPAREN .

    PLUS            reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    MINUS           reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    MULT_OP         reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    DIV_OP          reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    LT              reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    GT              reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    EQUALS          reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    SEMI            reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    EQUAL           reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    AND             reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    OR              reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    GREATER         reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    SMALLER         reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    SUBSTR          reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    RANDOM          reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    MULT            reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    DIV             reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    SUM             reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    LPAREN          reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    NUMBER          reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    ID              reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    PROC            reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    CALL            reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    DEF             reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    PUT             reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    ADD             reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    POS             reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    POSX            reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    POSY            reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    USECOLOR        reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    DOWN            reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    UP              reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    BEGINNING       reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    FOR             reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    CASE            reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    REPEAT          reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    WHILE           reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    $end            reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    RPAREN          reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    COMMA           reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    RBRACKET        reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    TO              reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)
    THEN            reduce using rule 55 (expression -> GREATER LPAREN statement COMMA statement RPAREN .)


state 185

    (56) expression -> SMALLER LPAREN statement COMMA statement RPAREN .

    PLUS            reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    MINUS           reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    MULT_OP         reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    DIV_OP          reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    LT              reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    GT              reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    EQUALS          reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    SEMI            reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    EQUAL           reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    AND             reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    OR              reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    GREATER         reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    SMALLER         reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    SUBSTR          reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    RANDOM          reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    MULT            reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    DIV             reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    SUM             reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    LPAREN          reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    NUMBER          reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    ID              reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    PROC            reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    CALL            reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    DEF             reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    PUT             reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    ADD             reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    POS             reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    POSX            reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    POSY            reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    USECOLOR        reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    DOWN            reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    UP              reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    BEGINNING       reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    FOR             reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    CASE            reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    REPEAT          reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    WHILE           reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    $end            reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    RPAREN          reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    COMMA           reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    RBRACKET        reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    TO              reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)
    THEN            reduce using rule 56 (expression -> SMALLER LPAREN statement COMMA statement RPAREN .)


state 186

    (57) expression -> SUBSTR LPAREN statement COMMA statement RPAREN .

    PLUS            reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    MINUS           reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    MULT_OP         reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    DIV_OP          reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    LT              reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    GT              reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    EQUALS          reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    SEMI            reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    EQUAL           reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    AND             reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    OR              reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    GREATER         reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    SMALLER         reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    SUBSTR          reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    RANDOM          reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    MULT            reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    DIV             reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    SUM             reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    LPAREN          reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    NUMBER          reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    ID              reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    PROC            reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    CALL            reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    DEF             reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    PUT             reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    ADD             reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    POS             reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    POSX            reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    POSY            reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    USECOLOR        reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    DOWN            reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    UP              reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    BEGINNING       reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    FOR             reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    CASE            reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    REPEAT          reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    WHILE           reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    $end            reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    RPAREN          reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    COMMA           reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    RBRACKET        reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    TO              reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)
    THEN            reduce using rule 57 (expression -> SUBSTR LPAREN statement COMMA statement RPAREN .)


state 187

    (59) expression -> MULT LPAREN statement COMMA statement RPAREN .

    PLUS            reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    MINUS           reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    MULT_OP         reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    DIV_OP          reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    LT              reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    GT              reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    EQUALS          reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    SEMI            reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    EQUAL           reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    AND             reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    OR              reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    GREATER         reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    SMALLER         reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    SUBSTR          reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    RANDOM          reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    MULT            reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    DIV             reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    SUM             reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    LPAREN          reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    NUMBER          reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    ID              reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    PROC            reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    CALL            reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    DEF             reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    PUT             reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    ADD             reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    POS             reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    POSX            reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    POSY            reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    USECOLOR        reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    DOWN            reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    UP              reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    BEGINNING       reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    FOR             reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    CASE            reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    REPEAT          reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    WHILE           reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    $end            reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    RPAREN          reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    COMMA           reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    RBRACKET        reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    TO              reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)
    THEN            reduce using rule 59 (expression -> MULT LPAREN statement COMMA statement RPAREN .)


state 188

    (60) expression -> DIV LPAREN statement COMMA statement RPAREN .

    PLUS            reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    MINUS           reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    MULT_OP         reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    DIV_OP          reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    LT              reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    GT              reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    EQUALS          reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    SEMI            reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    EQUAL           reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    AND             reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    OR              reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    GREATER         reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    SMALLER         reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    SUBSTR          reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    RANDOM          reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    MULT            reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    DIV             reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    SUM             reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    LPAREN          reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    NUMBER          reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    ID              reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    PROC            reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    CALL            reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    DEF             reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    PUT             reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    ADD             reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    POS             reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    POSX            reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    POSY            reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    USECOLOR        reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    DOWN            reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    UP              reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    BEGINNING       reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    FOR             reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    CASE            reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    REPEAT          reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    WHILE           reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    $end            reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    RPAREN          reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    COMMA           reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    RBRACKET        reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    TO              reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)
    THEN            reduce using rule 60 (expression -> DIV LPAREN statement COMMA statement RPAREN .)


state 189

    (61) expression -> SUM LPAREN statement COMMA statement RPAREN .

    PLUS            reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    MINUS           reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    MULT_OP         reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    DIV_OP          reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    LT              reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    GT              reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    EQUALS          reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    SEMI            reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    EQUAL           reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    AND             reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    OR              reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    GREATER         reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    SMALLER         reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    SUBSTR          reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    RANDOM          reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    MULT            reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    DIV             reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    SUM             reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    LPAREN          reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    NUMBER          reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    ID              reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    PROC            reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    CALL            reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    DEF             reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    PUT             reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    ADD             reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    POS             reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    POSX            reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    POSY            reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    USECOLOR        reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    DOWN            reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    UP              reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    BEGINNING       reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    FOR             reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    CASE            reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    REPEAT          reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    WHILE           reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    $end            reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    RPAREN          reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    COMMA           reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    RBRACKET        reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    TO              reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)
    THEN            reduce using rule 61 (expression -> SUM LPAREN statement COMMA statement RPAREN .)


state 190

    (79) procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET . program RBRACKET SEMI END
    (1) program -> . statement SEMI
    (2) program -> . statement
    (3) program -> . program statement SEMI
    (4) program -> . program statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    program                        shift and go to state 201
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 191

    (82) parameter_list -> parameter_list COMMA expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    RPAREN          reduce using rule 82 (parameter_list -> parameter_list COMMA expression .)
    COMMA           reduce using rule 82 (parameter_list -> parameter_list COMMA expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    MULT_OP         shift and go to state 66
    DIV_OP          shift and go to state 67
    LT              shift and go to state 68
    GT              shift and go to state 69
    EQUALS          shift and go to state 70


state 192

    (35) def_statement -> DEF LPAREN ID COMMA statement RPAREN .

    SEMI            reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    EQUAL           reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    AND             reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    OR              reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    GREATER         reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    SMALLER         reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    SUBSTR          reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    RANDOM          reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    MULT            reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    DIV             reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    SUM             reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    LPAREN          reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    NUMBER          reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    ID              reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    PROC            reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    CALL            reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    DEF             reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    PUT             reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    ADD             reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    POS             reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    POSX            reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    POSY            reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    USECOLOR        reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    DOWN            reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    UP              reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    BEGINNING       reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    FOR             reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    CASE            reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    REPEAT          reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    WHILE           reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    $end            reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    RPAREN          reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    COMMA           reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)
    RBRACKET        reduce using rule 35 (def_statement -> DEF LPAREN ID COMMA statement RPAREN .)


state 193

    (36) put_statement -> PUT LPAREN ID COMMA statement RPAREN .

    SEMI            reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    EQUAL           reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    AND             reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    OR              reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    GREATER         reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    SMALLER         reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    SUBSTR          reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    RANDOM          reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    MULT            reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    DIV             reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    SUM             reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    LPAREN          reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    NUMBER          reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    ID              reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    PROC            reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    CALL            reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    DEF             reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    PUT             reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    ADD             reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    POS             reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    POSX            reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    POSY            reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    USECOLOR        reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    DOWN            reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    UP              reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    BEGINNING       reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    FOR             reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    CASE            reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    REPEAT          reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    WHILE           reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    $end            reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    RPAREN          reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    COMMA           reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)
    RBRACKET        reduce using rule 36 (put_statement -> PUT LPAREN ID COMMA statement RPAREN .)


state 194

    (38) add_statement -> ADD LPAREN ID COMMA statement RPAREN .

    SEMI            reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    EQUAL           reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    AND             reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    OR              reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    GREATER         reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    SMALLER         reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    SUBSTR          reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    RANDOM          reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    MULT            reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    DIV             reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    SUM             reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    LPAREN          reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    NUMBER          reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    ID              reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    PROC            reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    CALL            reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    DEF             reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    PUT             reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    ADD             reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    POS             reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    POSX            reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    POSY            reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    USECOLOR        reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    DOWN            reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    UP              reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    BEGINNING       reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    FOR             reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    CASE            reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    REPEAT          reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    WHILE           reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    $end            reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    RPAREN          reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    COMMA           reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)
    RBRACKET        reduce using rule 38 (add_statement -> ADD LPAREN ID COMMA statement RPAREN .)


state 195

    (45) pos_statement -> POS LPAREN statement COMMA statement RPAREN .

    SEMI            reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    EQUAL           reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    AND             reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    OR              reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    GREATER         reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    SMALLER         reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    SUBSTR          reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    RANDOM          reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    MULT            reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    DIV             reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    SUM             reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    LPAREN          reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    BOOLEAN         reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    NUMBER          reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    ID              reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    PROC            reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    CALL            reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    DEF             reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    PUT             reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    ADD             reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    CONTINUEUP      reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    CONTINUEDOWN    reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    CONTINUERIGHT   reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    CONTINUELEFT    reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    TURNRIGHT       reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    TURNLEFT        reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    POS             reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    POSX            reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    POSY            reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    USECOLOR        reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    DOWN            reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    UP              reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    BEGINNING       reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    FOR             reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    CASE            reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    REPEAT          reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    WHILE           reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    $end            reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    RPAREN          reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    COMMA           reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)
    RBRACKET        reduce using rule 45 (pos_statement -> POS LPAREN statement COMMA statement RPAREN .)


state 196

    (70) for_statement -> FOR ID LPAREN expression TO expression . RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT_OP expression
    (31) expression -> expression . DIV_OP expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 202
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    MULT_OP         shift and go to state 66
    DIV_OP          shift and go to state 67
    LT              shift and go to state 68
    GT              shift and go to state 69
    EQUALS          shift and go to state 70


state 197

    (73) case_statement -> CASE ID when_clauses ELSE LBRACKET program . RBRACKET END CASE
    (3) program -> program . statement SEMI
    (4) program -> program . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    RBRACKET        shift and go to state 203
    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 62
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 198

    (76) when_clause -> WHEN expression THEN LBRACKET . program RBRACKET
    (1) program -> . statement SEMI
    (2) program -> . statement
    (3) program -> . program statement SEMI
    (4) program -> . program statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    expression                     shift and go to state 3
    program                        shift and go to state 204
    statement                      shift and go to state 2
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 199

    (77) repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET . statement RBRACKET
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 205
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 200

    (78) while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program . RBRACKET WHEND
    (3) program -> program . statement SEMI
    (4) program -> program . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    RBRACKET        shift and go to state 206
    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 62
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 201

    (79) procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program . RBRACKET SEMI END
    (3) program -> program . statement SEMI
    (4) program -> program . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    RBRACKET        shift and go to state 207
    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    statement                      shift and go to state 62
    expression                     shift and go to state 3
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 202

    (70) for_statement -> FOR ID LPAREN expression TO expression RPAREN . LOOP LBRACKET program RBRACKET END LOOP

    LOOP            shift and go to state 208


state 203

    (73) case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET . END CASE

    END             shift and go to state 209


state 204

    (76) when_clause -> WHEN expression THEN LBRACKET program . RBRACKET
    (3) program -> program . statement SEMI
    (4) program -> program . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    RBRACKET        shift and go to state 210
    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    expression                     shift and go to state 3
    statement                      shift and go to state 62
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 205

    (77) repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement . RBRACKET

    RBRACKET        shift and go to state 211


state 206

    (78) while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET . WHEND

    WHEND           shift and go to state 212


state 207

    (79) procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET . SEMI END

    SEMI            shift and go to state 213


state 208

    (70) for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP . LBRACKET program RBRACKET END LOOP

    LBRACKET        shift and go to state 214


state 209

    (73) case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END . CASE

    CASE            shift and go to state 215


state 210

    (76) when_clause -> WHEN expression THEN LBRACKET program RBRACKET .

    END             reduce using rule 76 (when_clause -> WHEN expression THEN LBRACKET program RBRACKET .)
    ELSE            reduce using rule 76 (when_clause -> WHEN expression THEN LBRACKET program RBRACKET .)
    WHEN            reduce using rule 76 (when_clause -> WHEN expression THEN LBRACKET program RBRACKET .)


state 211

    (77) repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .

    SEMI            reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    EQUAL           reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    AND             reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    OR              reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    GREATER         reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    SMALLER         reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    SUBSTR          reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    RANDOM          reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    MULT            reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    DIV             reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    SUM             reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    LPAREN          reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    BOOLEAN         reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    NUMBER          reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    ID              reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    PROC            reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    CALL            reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    DEF             reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    PUT             reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    ADD             reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    CONTINUEUP      reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    CONTINUEDOWN    reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    CONTINUERIGHT   reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    CONTINUELEFT    reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    TURNRIGHT       reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    TURNLEFT        reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    POS             reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    POSX            reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    POSY            reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    USECOLOR        reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    DOWN            reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    UP              reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    BEGINNING       reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    FOR             reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    CASE            reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    REPEAT          reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    WHILE           reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    $end            reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    RPAREN          reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    COMMA           reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)
    RBRACKET        reduce using rule 77 (repeat_statement -> REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET .)


state 212

    (78) while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .

    SEMI            reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    EQUAL           reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    AND             reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    OR              reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    GREATER         reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    SMALLER         reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    SUBSTR          reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    RANDOM          reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    MULT            reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    DIV             reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    SUM             reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    LPAREN          reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    BOOLEAN         reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    NUMBER          reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    ID              reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    PROC            reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    CALL            reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    DEF             reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    PUT             reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    ADD             reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    CONTINUEUP      reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    CONTINUEDOWN    reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    CONTINUERIGHT   reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    CONTINUELEFT    reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    TURNRIGHT       reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    TURNLEFT        reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    POS             reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    POSX            reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    POSY            reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    USECOLOR        reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    DOWN            reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    UP              reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    BEGINNING       reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    FOR             reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    CASE            reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    REPEAT          reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    WHILE           reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    $end            reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    RPAREN          reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    COMMA           reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)
    RBRACKET        reduce using rule 78 (while_statement -> WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND .)


state 213

    (79) procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI . END

    END             shift and go to state 216


state 214

    (70) for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET . program RBRACKET END LOOP
    (1) program -> . statement SEMI
    (2) program -> . statement
    (3) program -> . program statement SEMI
    (4) program -> . program statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    expression                     shift and go to state 3
    program                        shift and go to state 217
    statement                      shift and go to state 2
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 215

    (73) case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .

    SEMI            reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    EQUAL           reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    AND             reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    OR              reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    GREATER         reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    SMALLER         reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    SUBSTR          reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    RANDOM          reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    MULT            reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    DIV             reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    SUM             reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    LPAREN          reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    BOOLEAN         reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    NUMBER          reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    ID              reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    PROC            reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    CALL            reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    DEF             reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    PUT             reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    ADD             reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    CONTINUEUP      reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    CONTINUEDOWN    reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    CONTINUERIGHT   reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    CONTINUELEFT    reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    TURNRIGHT       reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    TURNLEFT        reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    POS             reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    POSX            reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    POSY            reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    USECOLOR        reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    DOWN            reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    UP              reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    BEGINNING       reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    FOR             reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    CASE            reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    REPEAT          reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    WHILE           reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    $end            reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    RPAREN          reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    COMMA           reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)
    RBRACKET        reduce using rule 73 (case_statement -> CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE .)


state 216

    (79) procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .

    SEMI            reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    EQUAL           reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    AND             reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    OR              reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    GREATER         reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    SMALLER         reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    SUBSTR          reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    RANDOM          reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    MULT            reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    DIV             reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    SUM             reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    LPAREN          reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    BOOLEAN         reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    NUMBER          reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    ID              reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    PROC            reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    CALL            reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    DEF             reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    PUT             reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    ADD             reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    CONTINUEUP      reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    CONTINUEDOWN    reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    CONTINUERIGHT   reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    CONTINUELEFT    reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    TURNRIGHT       reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    TURNLEFT        reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    POS             reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    POSX            reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    POSY            reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    USECOLOR        reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    DOWN            reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    UP              reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    BEGINNING       reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    FOR             reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    CASE            reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    REPEAT          reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    WHILE           reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    $end            reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    RPAREN          reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    COMMA           reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)
    RBRACKET        reduce using rule 79 (procedure_statement -> PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END .)


state 217

    (70) for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program . RBRACKET END LOOP
    (3) program -> program . statement SEMI
    (4) program -> program . statement
    (5) statement -> . expression
    (6) statement -> . procedure_statement
    (7) statement -> . call_statement
    (8) statement -> . def_statement
    (9) statement -> . put_statement
    (10) statement -> . add_statement
    (11) statement -> . continueup_statement
    (12) statement -> . continuedown_statement
    (13) statement -> . continueright_statement
    (14) statement -> . continueleft_statement
    (15) statement -> . turnright_statement
    (16) statement -> . turnleft_statement
    (17) statement -> . pos_statement
    (18) statement -> . posx_statement
    (19) statement -> . posy_statement
    (20) statement -> . usecolor_statement
    (21) statement -> . down_statement
    (22) statement -> . up_statement
    (23) statement -> . beginning_statement
    (24) statement -> . for_statement
    (25) statement -> . case_statement
    (26) statement -> . repeat_statement
    (27) statement -> . while_statement
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT_OP expression
    (31) expression -> . expression DIV_OP expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression EQUALS expression
    (52) expression -> . EQUAL LPAREN statement COMMA statement RPAREN
    (53) expression -> . AND LPAREN statement COMMA statement RPAREN
    (54) expression -> . OR LPAREN statement COMMA statement RPAREN
    (55) expression -> . GREATER LPAREN statement COMMA statement RPAREN
    (56) expression -> . SMALLER LPAREN statement COMMA statement RPAREN
    (57) expression -> . SUBSTR LPAREN statement COMMA statement RPAREN
    (58) expression -> . RANDOM LPAREN statement RPAREN
    (59) expression -> . MULT LPAREN statement COMMA statement RPAREN
    (60) expression -> . DIV LPAREN statement COMMA statement RPAREN
    (61) expression -> . SUM LPAREN statement COMMA statement RPAREN
    (62) expression -> . LPAREN expression_list RPAREN
    (65) expression -> . BOOLEAN
    (68) expression -> . NUMBER
    (69) expression -> . ID
    (79) procedure_statement -> . PROC ID LPAREN parameter_list RPAREN LBRACKET program RBRACKET SEMI END
    (80) call_statement -> . CALL ID LPAREN parameter_list RPAREN
    (35) def_statement -> . DEF LPAREN ID COMMA statement RPAREN
    (36) put_statement -> . PUT LPAREN ID COMMA statement RPAREN
    (37) add_statement -> . ADD LPAREN ID RPAREN
    (38) add_statement -> . ADD LPAREN ID COMMA statement RPAREN
    (39) continueup_statement -> . CONTINUEUP statement
    (40) continuedown_statement -> . CONTINUEDOWN statement
    (41) continueright_statement -> . CONTINUERIGHT statement
    (42) continueleft_statement -> . CONTINUELEFT statement
    (43) turnright_statement -> . TURNRIGHT statement
    (44) turnleft_statement -> . TURNLEFT statement
    (45) pos_statement -> . POS LPAREN statement COMMA statement RPAREN
    (46) posx_statement -> . POSX statement
    (47) posy_statement -> . POSY statement
    (48) usecolor_statement -> . USECOLOR statement
    (49) down_statement -> . DOWN
    (50) up_statement -> . UP
    (51) beginning_statement -> . BEGINNING
    (70) for_statement -> . FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP
    (72) case_statement -> . CASE ID when_clauses END CASE
    (73) case_statement -> . CASE ID when_clauses ELSE LBRACKET program RBRACKET END CASE
    (77) repeat_statement -> . REPEAT LBRACKET program RBRACKET UNTIL LBRACKET statement RBRACKET
    (78) while_statement -> . WHILE LBRACKET statement RBRACKET LBRACKET program RBRACKET WHEND

    RBRACKET        shift and go to state 218
    EQUAL           shift and go to state 26
    AND             shift and go to state 28
    OR              shift and go to state 29
    GREATER         shift and go to state 30
    SMALLER         shift and go to state 31
    SUBSTR          shift and go to state 32
    RANDOM          shift and go to state 33
    MULT            shift and go to state 34
    DIV             shift and go to state 35
    SUM             shift and go to state 36
    LPAREN          shift and go to state 27
    BOOLEAN         shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    PROC            shift and go to state 40
    CALL            shift and go to state 41
    DEF             shift and go to state 42
    PUT             shift and go to state 43
    ADD             shift and go to state 44
    CONTINUEUP      shift and go to state 45
    CONTINUEDOWN    shift and go to state 46
    CONTINUERIGHT   shift and go to state 47
    CONTINUELEFT    shift and go to state 48
    TURNRIGHT       shift and go to state 49
    TURNLEFT        shift and go to state 50
    POS             shift and go to state 51
    POSX            shift and go to state 52
    POSY            shift and go to state 53
    USECOLOR        shift and go to state 54
    DOWN            shift and go to state 55
    UP              shift and go to state 56
    BEGINNING       shift and go to state 57
    FOR             shift and go to state 58
    CASE            shift and go to state 59
    REPEAT          shift and go to state 60
    WHILE           shift and go to state 61

    expression                     shift and go to state 3
    statement                      shift and go to state 62
    procedure_statement            shift and go to state 4
    call_statement                 shift and go to state 5
    def_statement                  shift and go to state 6
    put_statement                  shift and go to state 7
    add_statement                  shift and go to state 8
    continueup_statement           shift and go to state 9
    continuedown_statement         shift and go to state 10
    continueright_statement        shift and go to state 11
    continueleft_statement         shift and go to state 12
    turnright_statement            shift and go to state 13
    turnleft_statement             shift and go to state 14
    pos_statement                  shift and go to state 15
    posx_statement                 shift and go to state 16
    posy_statement                 shift and go to state 17
    usecolor_statement             shift and go to state 18
    down_statement                 shift and go to state 19
    up_statement                   shift and go to state 20
    beginning_statement            shift and go to state 21
    for_statement                  shift and go to state 22
    case_statement                 shift and go to state 23
    repeat_statement               shift and go to state 24
    while_statement                shift and go to state 25

state 218

    (70) for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET . END LOOP

    END             shift and go to state 219


state 219

    (70) for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END . LOOP

    LOOP            shift and go to state 220


state 220

    (70) for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .

    SEMI            reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    EQUAL           reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    AND             reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    OR              reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    GREATER         reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    SMALLER         reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    SUBSTR          reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    RANDOM          reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    MULT            reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    DIV             reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    SUM             reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    LPAREN          reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    BOOLEAN         reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    NUMBER          reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    ID              reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    PROC            reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    CALL            reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    DEF             reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    PUT             reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    ADD             reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    CONTINUEUP      reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    CONTINUEDOWN    reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    CONTINUERIGHT   reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    CONTINUELEFT    reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    TURNRIGHT       reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    TURNLEFT        reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    POS             reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    POSX            reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    POSY            reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    USECOLOR        reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    DOWN            reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    UP              reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    BEGINNING       reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    FOR             reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    CASE            reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    REPEAT          reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    WHILE           reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    $end            reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    RPAREN          reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    COMMA           reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)
    RBRACKET        reduce using rule 70 (for_statement -> FOR ID LPAREN expression TO expression RPAREN LOOP LBRACKET program RBRACKET END LOOP .)

